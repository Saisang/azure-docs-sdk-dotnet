<Type Name="TaskResultHandler" FullName="Azure.Compute.Batch.TaskResultHandler">
  <TypeSignature Language="C#" Value="public abstract class TaskResultHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TaskResultHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Compute.Batch.TaskResultHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TaskResultHandler" />
  <TypeSignature Language="F#" Value="type TaskResultHandler = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Compute.Batch</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            you can use to specify under what conditions an operation to
            add multiple tasks to a job should retry, mark as successful, failure, or terminate.
            </summary>
    <remarks>You do not need to specify this behavior explicitly; if you do not, a default behavior
            is used.  This behavior uses the <see cref="T:Azure.Compute.Batch.DefaultCreateTaskResultHandler" />
            criteria.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskResultHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.TaskResultHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTaskResultHandler">
      <MemberSignature Language="C#" Value="public abstract Azure.Compute.Batch.CreateTaskResultStatus CreateTaskResultHandler (Azure.Compute.Batch.CreateTaskResult addTaskResult, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Azure.Compute.Batch.CreateTaskResultStatus CreateTaskResultHandler(class Azure.Compute.Batch.CreateTaskResult addTaskResult, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Compute.Batch.TaskResultHandler.CreateTaskResultHandler(Azure.Compute.Batch.CreateTaskResult,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateTaskResultHandler (addTaskResult As CreateTaskResult, cancellationToken As CancellationToken) As CreateTaskResultStatus" />
      <MemberSignature Language="F#" Value="abstract member CreateTaskResultHandler : Azure.Compute.Batch.CreateTaskResult * System.Threading.CancellationToken -&gt; Azure.Compute.Batch.CreateTaskResultStatus" Usage="taskResultHandler.CreateTaskResultHandler (addTaskResult, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Compute.Batch</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Compute.Batch.CreateTaskResultStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addTaskResult" Type="Azure.Compute.Batch.CreateTaskResult" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="addTaskResult" />
        <param name="cancellationToken" />
        <summary>
            Handles the result of a single AddTask operation.
            </summary>
        <returns>AddTaskResultStatus status</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
