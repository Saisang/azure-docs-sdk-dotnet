<Type Name="UserAgentPolicy" FullName="System.ClientModel.Primitives.UserAgentPolicy">
  <TypeSignature Language="C#" Value="public class UserAgentPolicy : System.ClientModel.Primitives.PipelinePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserAgentPolicy extends System.ClientModel.Primitives.PipelinePolicy" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.UserAgentPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class UserAgentPolicy&#xA;Inherits PipelinePolicy" />
  <TypeSignature Language="F#" Value="type UserAgentPolicy = class&#xA;    inherit PipelinePolicy" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.PipelinePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A pipeline policy that adds user agent headers to HTTP requests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserAgentPolicy (System.Reflection.Assembly callerAssembly, string? applicationId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly callerAssembly, string applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.UserAgentPolicy.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callerAssembly As Assembly, Optional applicationId As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.Primitives.UserAgentPolicy : System.Reflection.Assembly * string -&gt; System.ClientModel.Primitives.UserAgentPolicy" Usage="new System.ClientModel.Primitives.UserAgentPolicy (callerAssembly, applicationId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callerAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="applicationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callerAssembly">The <see cref="T:System.Reflection.Assembly" /> used to generate the package name and version information for the user agent.</param>
        <param name="applicationId">An optional value to be prepended to the user agent string.</param>
        <summary>
            Initialize an instance of <see cref="T:System.ClientModel.Primitives.UserAgentPolicy" /> by extracting the name and version information from the <see cref="T:System.Reflection.Assembly" /> associated with the <paramref name="callerAssembly" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public string? ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.UserAgentPolicy.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationId As String" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : string" Usage="System.ClientModel.Primitives.UserAgentPolicy.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The value of the applicationId used to initialize this <see cref="T:System.ClientModel.Primitives.UserAgentPolicy" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.UserAgentPolicy.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.ClientModel.Primitives.UserAgentPolicy.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The package type represented by this <see cref="T:System.ClientModel.Primitives.UserAgentPolicy" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public override void Process (System.ClientModel.Primitives.PipelineMessage message, System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int currentIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Process(class System.ClientModel.Primitives.PipelineMessage message, class System.Collections.Generic.IReadOnlyList`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int32 currentIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.UserAgentPolicy.Process(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Process (message As PipelineMessage, pipeline As IReadOnlyList(Of PipelinePolicy), currentIndex As Integer)" />
      <MemberSignature Language="F#" Value="override this.Process : System.ClientModel.Primitives.PipelineMessage * System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * int -&gt; unit" Usage="userAgentPolicy.Process (message, pipeline, currentIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="currentIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The pipeline message to process.</param>
        <param name="pipeline">The remaining pipeline policies.</param>
        <param name="currentIndex">The current index in the pipeline.</param>
        <summary>
            Process the pipeline message synchronously.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask ProcessAsync (System.ClientModel.Primitives.PipelineMessage message, System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int currentIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(class System.ClientModel.Primitives.PipelineMessage message, class System.Collections.Generic.IReadOnlyList`1&lt;class System.ClientModel.Primitives.PipelinePolicy&gt; pipeline, int32 currentIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.UserAgentPolicy.ProcessAsync(System.ClientModel.Primitives.PipelineMessage,System.Collections.Generic.IReadOnlyList{System.ClientModel.Primitives.PipelinePolicy},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProcessAsync (message As PipelineMessage, pipeline As IReadOnlyList(Of PipelinePolicy), currentIndex As Integer) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt; * int -&gt; System.Threading.Tasks.ValueTask" Usage="userAgentPolicy.ProcessAsync (message, pipeline, currentIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.Collections.Generic.IReadOnlyList&lt;System.ClientModel.Primitives.PipelinePolicy&gt;" />
        <Parameter Name="currentIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The pipeline message to process.</param>
        <param name="pipeline">The remaining pipeline policies.</param>
        <param name="currentIndex">The current index in the pipeline.</param>
        <summary>
            Process the pipeline message asynchronously.
            </summary>
        <returns>A ValueTask representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgentValue">
      <MemberSignature Language="C#" Value="public string UserAgentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgentValue" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.UserAgentPolicy.UserAgentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgentValue As String" />
      <MemberSignature Language="F#" Value="member this.UserAgentValue : string" Usage="System.ClientModel.Primitives.UserAgentPolicy.UserAgentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The formatted user agent string that will be added to HTTP requests by this policy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
