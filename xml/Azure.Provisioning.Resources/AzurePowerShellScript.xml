<Type Name="AzurePowerShellScript" FullName="Azure.Provisioning.Resources.AzurePowerShellScript">
  <TypeSignature Language="C#" Value="public class AzurePowerShellScript : Azure.Provisioning.Resources.ArmDeploymentScript" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AzurePowerShellScript extends Azure.Provisioning.Resources.ArmDeploymentScript" />
  <TypeSignature Language="DocId" Value="T:Azure.Provisioning.Resources.AzurePowerShellScript" />
  <TypeSignature Language="VB.NET" Value="Public Class AzurePowerShellScript&#xA;Inherits ArmDeploymentScript" />
  <TypeSignature Language="F#" Value="type AzurePowerShellScript = class&#xA;    inherit ArmDeploymentScript" />
  <AssemblyInfo>
    <AssemblyName>Azure.Provisioning</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Provisioning.Resources.ArmDeploymentScript</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            AzurePowerShellScript.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AzurePowerShellScript (string bicepIdentifier, string? resourceVersion = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string bicepIdentifier, string resourceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resources.AzurePowerShellScript.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bicepIdentifier As String, Optional resourceVersion As String = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Provisioning.Resources.AzurePowerShellScript : string * string -&gt; Azure.Provisioning.Resources.AzurePowerShellScript" Usage="new Azure.Provisioning.Resources.AzurePowerShellScript (bicepIdentifier, resourceVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bicepIdentifier" Type="System.String" />
        <Parameter Name="resourceVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bicepIdentifier">
            The the Bicep identifier name of the AzurePowerShellScript resource.
            This can be used to refer to the resource in expressions, but is not
            the Azure name of the resource.  This value can contain letters,
            numbers, and underscores.
            </param>
        <param name="resourceVersion">Version of the AzurePowerShellScript.</param>
        <summary>
            Creates a new AzurePowerShellScript.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.Arguments : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Command line arguments to pass to the script. Arguments are separated
            by spaces. ex: -Name blue* -Location 'West US 2'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzPowerShellVersion">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; AzPowerShellVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; AzPowerShellVersion" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.AzPowerShellVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AzPowerShellVersion As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.AzPowerShellVersion : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.AzPowerShellVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Azure PowerShell module version to be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupPreference">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptCleanupOptions&gt; CleanupPreference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;valuetype Azure.Provisioning.Resources.ScriptCleanupOptions&gt; CleanupPreference" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.CleanupPreference" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupPreference As BicepValue(Of ScriptCleanupOptions)" />
      <MemberSignature Language="F#" Value="member this.CleanupPreference : Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptCleanupOptions&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.CleanupPreference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptCleanupOptions&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The clean up preference when the script execution gets in a terminal
            state. Default setting is 'Always'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerGroupName">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; ContainerGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; ContainerGroupName" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.ContainerGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerGroupName As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.ContainerGroupName : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.ContainerGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Container group name, if not specified then the name will get
            auto-generated. Not specifying a 'containerGroupName'
            indicates the system to generate a unique name which might end up
            flagging an Azure Policy as non-compliant. Use
            'containerGroupName' when you have an Azure Policy that
            expects a specific naming convention or when you want to fully control
            the name. 'containerGroupName' property must be between 1
            and 63 characters long, must contain only lowercase letters, numbers,
            and dashes and it cannot start or end with a dash and consecutive
            dashes are not allowed. To specify a 'containerGroupName',
            add the following object to properties: {
            "containerSettings": { "containerGroupName":
            "contoso-container" } }. If you do not want to specify a
            'containerGroupName' then do not add
            'containerSettings' property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerSettings">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Resources.ScriptContainerConfiguration ContainerSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Resources.ScriptContainerConfiguration ContainerSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.ContainerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerSettings As ScriptContainerConfiguration" />
      <MemberSignature Language="F#" Value="member this.ContainerSettings : Azure.Provisioning.Resources.ScriptContainerConfiguration with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.ContainerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.ScriptContainerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Container settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineProvisionableProperties">
      <MemberSignature Language="C#" Value="protected override void DefineProvisionableProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefineProvisionableProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Provisioning.Resources.AzurePowerShellScript.DefineProvisionableProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefineProvisionableProperties ()" />
      <MemberSignature Language="F#" Value="override this.DefineProvisionableProperties : unit -&gt; unit" Usage="azurePowerShellScript.DefineProvisionableProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Define all the provisionable properties of AzurePowerShellScript.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepList&lt;Azure.Provisioning.Resources.ScriptEnvironmentVariable&gt; EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepList`1&lt;class Azure.Provisioning.Resources.ScriptEnvironmentVariable&gt; EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As BicepList(Of ScriptEnvironmentVariable)" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : Azure.Provisioning.BicepList&lt;Azure.Provisioning.Resources.ScriptEnvironmentVariable&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;Azure.Provisioning.Resources.ScriptEnvironmentVariable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The environment variables to pass over to the script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceUpdateTag">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; ForceUpdateTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; ForceUpdateTag" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.ForceUpdateTag" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceUpdateTag As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.ForceUpdateTag : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.ForceUpdateTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets how the deployment script should be forced to execute even
            if the script resource has not changed. Can be current time stamp or a
            GUID.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;BinaryData&gt; Outputs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;class System.BinaryData&gt; Outputs" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.Outputs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outputs As BicepValue(Of BinaryData)" />
      <MemberSignature Language="F#" Value="member this.Outputs : Azure.Provisioning.BicepValue&lt;BinaryData&gt;" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of script outputs.                          To assign an object to
            this property use
            System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions).
            To assign an already formatted json string to
            this property use System.BinaryData.FromString(System.String).
            Examples:
            BinaryData.FromObjectAsJson("foo")Creates a
            payload of
            "foo".BinaryData.FromString("\"foo\"")Creates
            a payload of "foo".BinaryData.FromObjectAsJson(new { key =
            "value" })Creates a payload of { "key":
            "value" }.BinaryData.FromString("{\"key\":
            \"value\"}")Creates a payload of { "key":
            "value" }.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryScriptUri">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Uri&gt; PrimaryScriptUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;class System.Uri&gt; PrimaryScriptUri" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.PrimaryScriptUri" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryScriptUri As BicepValue(Of Uri)" />
      <MemberSignature Language="F#" Value="member this.PrimaryScriptUri : Azure.Provisioning.BicepValue&lt;Uri&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.PrimaryScriptUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Uri for the script. This is the entry point for the external script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningState">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptProvisioningState&gt; ProvisioningState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;valuetype Azure.Provisioning.Resources.ScriptProvisioningState&gt; ProvisioningState" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.ProvisioningState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProvisioningState As BicepValue(Of ScriptProvisioningState)" />
      <MemberSignature Language="F#" Value="member this.ProvisioningState : Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptProvisioningState&gt;" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.ProvisioningState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;Azure.Provisioning.Resources.ScriptProvisioningState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            State of the script execution. This only appears in the response.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetentionInterval">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;TimeSpan&gt; RetentionInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;valuetype System.TimeSpan&gt; RetentionInterval" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.RetentionInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RetentionInterval As BicepValue(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.RetentionInterval : Azure.Provisioning.BicepValue&lt;TimeSpan&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.RetentionInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Interval for which the service retains the script resource after it
            reaches a terminal state. Resource will be deleted when this duration
            expires. Duration is based on ISO 8601 pattern (for example P1D means
            one day).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptContent">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;string&gt; ScriptContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;string&gt; ScriptContent" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.ScriptContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptContent As BicepValue(Of String)" />
      <MemberSignature Language="F#" Value="member this.ScriptContent : Azure.Provisioning.BicepValue&lt;string&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.ScriptContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Script body.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Resources.ScriptStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Resources.ScriptStatus Status" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As ScriptStatus" />
      <MemberSignature Language="F#" Value="member this.Status : Azure.Provisioning.Resources.ScriptStatus" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.ScriptStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Contains the results of script execution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccountSettings">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.Resources.ScriptStorageConfiguration StorageAccountSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.Resources.ScriptStorageConfiguration StorageAccountSettings" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.StorageAccountSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageAccountSettings As ScriptStorageConfiguration" />
      <MemberSignature Language="F#" Value="member this.StorageAccountSettings : Azure.Provisioning.Resources.ScriptStorageConfiguration with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.StorageAccountSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.Resources.ScriptStorageConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Storage Account settings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportingScriptUris">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepList&lt;Uri&gt; SupportingScriptUris { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepList`1&lt;class System.Uri&gt; SupportingScriptUris" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.SupportingScriptUris" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportingScriptUris As BicepList(Of Uri)" />
      <MemberSignature Language="F#" Value="member this.SupportingScriptUris : Azure.Provisioning.BicepList&lt;Uri&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.SupportingScriptUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Supporting files for the external script.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public Azure.Provisioning.BicepValue&lt;TimeSpan&gt; Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Provisioning.BicepValue`1&lt;valuetype System.TimeSpan&gt; Timeout" />
      <MemberSignature Language="DocId" Value="P:Azure.Provisioning.Resources.AzurePowerShellScript.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As BicepValue(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.Timeout : Azure.Provisioning.BicepValue&lt;TimeSpan&gt; with get, set" Usage="Azure.Provisioning.Resources.AzurePowerShellScript.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Provisioning</AssemblyName>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Provisioning.BicepValue&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Maximum allowed script execution time specified in ISO 8601 format.
            Default value is P1D.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
