<Type Name="MockableDataMigrationArmClient" FullName="Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient">
  <TypeSignature Language="C#" Value="public class MockableDataMigrationArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableDataMigrationArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableDataMigrationArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableDataMigrationArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableDataMigrationArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseMigrationSqlDBResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource GetDatabaseMigrationSqlDBResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource GetDatabaseMigrationSqlDBResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDatabaseMigrationSqlDBResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseMigrationSqlDBResource (id As ResourceIdentifier) As DatabaseMigrationSqlDBResource" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseMigrationSqlDBResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource&#xA;override this.GetDatabaseMigrationSqlDBResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource" Usage="mockableDataMigrationArmClient.GetDatabaseMigrationSqlDBResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlDBResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseMigrationSqlMIResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource GetDatabaseMigrationSqlMIResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource GetDatabaseMigrationSqlMIResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDatabaseMigrationSqlMIResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseMigrationSqlMIResource (id As ResourceIdentifier) As DatabaseMigrationSqlMIResource" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseMigrationSqlMIResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource&#xA;override this.GetDatabaseMigrationSqlMIResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource" Usage="mockableDataMigrationArmClient.GetDatabaseMigrationSqlMIResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlMIResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseMigrationSqlVmResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource GetDatabaseMigrationSqlVmResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource GetDatabaseMigrationSqlVmResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDatabaseMigrationSqlVmResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseMigrationSqlVmResource (id As ResourceIdentifier) As DatabaseMigrationSqlVmResource" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseMigrationSqlVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource&#xA;override this.GetDatabaseMigrationSqlVmResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" Usage="mockableDataMigrationArmClient.GetDatabaseMigrationSqlVmResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DatabaseMigrationSqlVmResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationProjectFileResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource GetDataMigrationProjectFileResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource GetDataMigrationProjectFileResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDataMigrationProjectFileResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationProjectFileResource (id As ResourceIdentifier) As DataMigrationProjectFileResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationProjectFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource&#xA;override this.GetDataMigrationProjectFileResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource" Usage="mockableDataMigrationArmClient.GetDataMigrationProjectFileResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectFileResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationProjectResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DataMigrationProjectResource GetDataMigrationProjectResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DataMigrationProjectResource GetDataMigrationProjectResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDataMigrationProjectResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationProjectResource (id As ResourceIdentifier) As DataMigrationProjectResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationProjectResource&#xA;override this.GetDataMigrationProjectResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationProjectResource" Usage="mockableDataMigrationArmClient.GetDataMigrationProjectResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DataMigrationProjectResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DataMigrationProjectResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationProjectResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DataMigrationServiceResource GetDataMigrationServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DataMigrationServiceResource GetDataMigrationServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDataMigrationServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationServiceResource (id As ResourceIdentifier) As DataMigrationServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationServiceResource&#xA;override this.GetDataMigrationServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationServiceResource" Usage="mockableDataMigrationArmClient.GetDataMigrationServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DataMigrationServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DataMigrationServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMigrationServiceTaskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource GetDataMigrationServiceTaskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource GetDataMigrationServiceTaskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetDataMigrationServiceTaskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMigrationServiceTaskResource (id As ResourceIdentifier) As DataMigrationServiceTaskResource" />
      <MemberSignature Language="F#" Value="abstract member GetDataMigrationServiceTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource&#xA;override this.GetDataMigrationServiceTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource" Usage="mockableDataMigrationArmClient.GetDataMigrationServiceTaskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.DataMigrationServiceTaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceServiceTaskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.ServiceServiceTaskResource GetServiceServiceTaskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.ServiceServiceTaskResource GetServiceServiceTaskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetServiceServiceTaskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceServiceTaskResource (id As ResourceIdentifier) As ServiceServiceTaskResource" />
      <MemberSignature Language="F#" Value="abstract member GetServiceServiceTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.ServiceServiceTaskResource&#xA;override this.GetServiceServiceTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.ServiceServiceTaskResource" Usage="mockableDataMigrationArmClient.GetServiceServiceTaskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.ServiceServiceTaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.ServiceServiceTaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.ServiceServiceTaskResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.ServiceServiceTaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.ServiceServiceTaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMigrationServiceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.DataMigration.SqlMigrationServiceResource GetSqlMigrationServiceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.DataMigration.SqlMigrationServiceResource GetSqlMigrationServiceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DataMigration.Mocking.MockableDataMigrationArmClient.GetSqlMigrationServiceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMigrationServiceResource (id As ResourceIdentifier) As SqlMigrationServiceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMigrationServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.SqlMigrationServiceResource&#xA;override this.GetSqlMigrationServiceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" Usage="mockableDataMigrationArmClient.GetSqlMigrationServiceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DataMigration</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DataMigration.SqlMigrationServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DataMigration.SqlMigrationServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
