<Type Name="DictionaryDecompounderTokenFilter" FullName="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter">
  <TypeSignature Language="C#" Value="public class DictionaryDecompounderTokenFilter : Azure.Search.Documents.Indexes.Models.TokenFilter" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictionaryDecompounderTokenFilter extends Azure.Search.Documents.Indexes.Models.TokenFilter" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class DictionaryDecompounderTokenFilter&#xA;Inherits TokenFilter" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type DictionaryDecompounderTokenFilter = class&#xA;    inherit TokenFilter" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class DictionaryDecompounderTokenFilter : Azure.Search.Documents.Indexes.Models.TokenFilter, System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictionaryDecompounderTokenFilter extends Azure.Search.Documents.Indexes.Models.TokenFilter implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class DictionaryDecompounderTokenFilter&#xA;Inherits TokenFilter&#xA;Implements IJsonModel(Of DictionaryDecompounderTokenFilter), IPersistableModel(Of DictionaryDecompounderTokenFilter)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type DictionaryDecompounderTokenFilter = class&#xA;    inherit TokenFilter&#xA;    interface IJsonModel&lt;DictionaryDecompounderTokenFilter&gt;&#xA;    interface IPersistableModel&lt;DictionaryDecompounderTokenFilter&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.2.0.0</AssemblyVersion>
    <AssemblyVersion>11.2.1.0</AssemblyVersion>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.1.0</AssemblyVersion>
    <AssemblyVersion>11.6.0.0</AssemblyVersion>
    <AssemblyVersion>11.6.1.0</AssemblyVersion>
    <AssemblyVersion>11.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Search.Documents.Indexes.Models.TokenFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Decomposes compound words found in many Germanic languages. This token filter is implemented using Apache Lucene. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictionaryDecompounderTokenFilter (string name, System.Collections.Generic.IEnumerable&lt;string&gt; wordList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Collections.Generic.IEnumerable`1&lt;string&gt; wordList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, wordList As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter : string * seq&lt;string&gt; -&gt; Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter" Usage="new Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter (name, wordList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="wordList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        <param name="wordList"> The list of words to match against. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="wordList" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected override void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="dictionaryDecompounderTokenFilter.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSubwordSize">
      <MemberSignature Language="C#" Value="public int? MaxSubwordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxSubwordSize" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MaxSubwordSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSubwordSize As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxSubwordSize : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MaxSubwordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSubwordSize">
      <MemberSignature Language="C#" Value="public int? MinSubwordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinSubwordSize" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinSubwordSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSubwordSize As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MinSubwordSize : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinSubwordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWordSize">
      <MemberSignature Language="C#" Value="public int? MinWordSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MinWordSize" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinWordSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWordSize As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MinWordSize : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinWordSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnlyLongestMatch">
      <MemberSignature Language="C#" Value="public bool? OnlyLongestMatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; OnlyLongestMatch" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.OnlyLongestMatch" />
      <MemberSignature Language="VB.NET" Value="Public Property OnlyLongestMatch As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.OnlyLongestMatch : Nullable&lt;bool&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.OnlyLongestMatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A value indicating whether to add only the longest matching subword to the output. Default is false. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter IJsonModel&lt;DictionaryDecompounderTokenFilter&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#DictionaryDecompounderTokenFilter&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As DictionaryDecompounderTokenFilter Implements IJsonModel(Of DictionaryDecompounderTokenFilter).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter" Usage="dictionaryDecompounderTokenFilter.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;DictionaryDecompounderTokenFilter&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#DictionaryDecompounderTokenFilter&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of DictionaryDecompounderTokenFilter).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="dictionaryDecompounderTokenFilter.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter IPersistableModel&lt;DictionaryDecompounderTokenFilter&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#DictionaryDecompounderTokenFilter&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As DictionaryDecompounderTokenFilter Implements IPersistableModel(Of DictionaryDecompounderTokenFilter).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter" Usage="dictionaryDecompounderTokenFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#DictionaryDecompounderTokenFilter&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of DictionaryDecompounderTokenFilter).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="dictionaryDecompounderTokenFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;DictionaryDecompounderTokenFilter&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#DictionaryDecompounderTokenFilter&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of DictionaryDecompounderTokenFilter).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="dictionaryDecompounderTokenFilter.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WordList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; WordList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WordList" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.WordList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WordList As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.WordList : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.WordList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The list of words to match against. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
