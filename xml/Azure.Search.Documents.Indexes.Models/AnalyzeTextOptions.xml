<Type Name="AnalyzeTextOptions" FullName="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions">
  <TypeSignature Language="C#" Value="public class AnalyzeTextOptions" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeTextOptions extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeTextOptions" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type AnalyzeTextOptions = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class AnalyzeTextOptions : System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeTextOptions extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeTextOptions&#xA;Implements IJsonModel(Of AnalyzeTextOptions), IPersistableModel(Of AnalyzeTextOptions)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type AnalyzeTextOptions = class&#xA;    interface IJsonModel&lt;AnalyzeTextOptions&gt;&#xA;    interface IPersistableModel&lt;AnalyzeTextOptions&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.2.0.0</AssemblyVersion>
    <AssemblyVersion>11.2.1.0</AssemblyVersion>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.1.0</AssemblyVersion>
    <AssemblyVersion>11.6.0.0</AssemblyVersion>
    <AssemblyVersion>11.6.1.0</AssemblyVersion>
    <AssemblyVersion>11.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Specifies some text and analysis components used to break that text into tokens. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions : string -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> The text to break into tokens. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text, Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName analyzerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, valuetype Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName analyzerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, analyzerName As LexicalAnalyzerName)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions : string * Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions (text, analyzerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="analyzerName" Type="Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" />
      </Parameters>
      <Docs>
        <param name="text">Required text to break into tokens.</param>
        <param name="analyzerName">The name of the analyzer to use to break the given <paramref name="text" />.</param>
        <summary>
            Initializes a new instance of AnalyzeRequest.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text, Azure.Search.Documents.Indexes.Models.LexicalNormalizerName normalizerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, valuetype Azure.Search.Documents.Indexes.Models.LexicalNormalizerName normalizerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalNormalizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, normalizerName As LexicalNormalizerName)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions : string * Azure.Search.Documents.Indexes.Models.LexicalNormalizerName -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions (text, normalizerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="normalizerName" Type="Azure.Search.Documents.Indexes.Models.LexicalNormalizerName" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="text">Required text to break into tokens.</param>
        <param name="normalizerName">The name of the tokenizer to use to break the given <paramref name="text" />.</param>
        <summary>
            Initializes a new instance of AnalyzeRequest.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text, Azure.Search.Documents.Indexes.Models.LexicalTokenizerName tokenizerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName tokenizerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, tokenizerName As LexicalTokenizerName)" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions : string * Azure.Search.Documents.Indexes.Models.LexicalTokenizerName -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="new Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions (text, tokenizerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tokenizerName" Type="Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />
      </Parameters>
      <Docs>
        <param name="text">Required text to break into tokens.</param>
        <param name="tokenizerName">The name of the tokenizer to use to break the given <paramref name="text" />.</param>
        <summary>
            Initializes a new instance of AnalyzeRequest.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AnalyzerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName? AnalyzerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt; AnalyzerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.AnalyzerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnalyzerName As Nullable(Of LexicalAnalyzerName)" />
      <MemberSignature Language="F#" Value="member this.AnalyzerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt;" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.AnalyzerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the analyzer to use to break the given text. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; CharFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; CharFilters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.CharFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharFilters As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.CharFilters : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.CharFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An optional list of character filters to use when breaking the given text. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="analyzeTextOptions.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalNormalizerName? NormalizerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalNormalizerName&gt; NormalizerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.NormalizerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NormalizerName As Nullable(Of LexicalNormalizerName)" />
      <MemberSignature Language="F#" Value="member this.NormalizerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalNormalizerName&gt;" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.NormalizerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalNormalizerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the normalizer to use to normalize the given text. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions IJsonModel&lt;AnalyzeTextOptions&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#AnalyzeTextOptions&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As AnalyzeTextOptions Implements IJsonModel(Of AnalyzeTextOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="analyzeTextOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;AnalyzeTextOptions&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#AnalyzeTextOptions&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of AnalyzeTextOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="analyzeTextOptions.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions IPersistableModel&lt;AnalyzeTextOptions&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#AnalyzeTextOptions&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As AnalyzeTextOptions Implements IPersistableModel(Of AnalyzeTextOptions).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;AnalyzeTextOptions&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#AnalyzeTextOptions&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of AnalyzeTextOptions).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;AnalyzeTextOptions&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#AnalyzeTextOptions&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of AnalyzeTextOptions).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="analyzeTextOptions.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The text to break into tokens. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenFilters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.TokenFilterName&gt; TokenFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.Search.Documents.Indexes.Models.TokenFilterName&gt; TokenFilters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenFilters As IList(Of TokenFilterName)" />
      <MemberSignature Language="F#" Value="member this.TokenFilters : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.TokenFilterName&gt;" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.TokenFilterName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An optional list of token filters to use when breaking the given text. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenizerName">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.LexicalTokenizerName? TokenizerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt; TokenizerName" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenizerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TokenizerName As Nullable(Of LexicalTokenizerName)" />
      <MemberSignature Language="F#" Value="member this.TokenizerName : Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt;" Usage="Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenizerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.LexicalTokenizerName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the tokenizer to use to break the given text. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
