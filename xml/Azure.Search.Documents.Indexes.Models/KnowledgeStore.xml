<Type Name="KnowledgeStore" FullName="Azure.Search.Documents.Indexes.Models.KnowledgeStore">
  <TypeSignature Language="C#" Value="public class KnowledgeStore" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KnowledgeStore extends System.Object" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.KnowledgeStore" />
  <TypeSignature Language="VB.NET" Value="Public Class KnowledgeStore" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type KnowledgeStore = class" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class KnowledgeStore : System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KnowledgeStore extends System.Object implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class KnowledgeStore&#xA;Implements IJsonModel(Of KnowledgeStore), IPersistableModel(Of KnowledgeStore)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type KnowledgeStore = class&#xA;    interface IJsonModel&lt;KnowledgeStore&gt;&#xA;    interface IPersistableModel&lt;KnowledgeStore&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.1.0</AssemblyVersion>
    <AssemblyVersion>11.6.0.0</AssemblyVersion>
    <AssemblyVersion>11.6.1.0</AssemblyVersion>
    <AssemblyVersion>11.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> Definition of additional projections to azure blob, table, or files, of enriched data. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnowledgeStore (string storageConnectionString, System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; projections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string storageConnectionString, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; projections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storageConnectionString As String, projections As IEnumerable(Of KnowledgeStoreProjection))" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.KnowledgeStore : string * seq&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore" Usage="new Azure.Search.Documents.Indexes.Models.KnowledgeStore (storageConnectionString, projections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storageConnectionString" Type="System.String" />
        <Parameter Name="projections" Type="System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;" />
      </Parameters>
      <Docs>
        <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
        <param name="projections"> A list of additional projections to perform during indexing. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.KnowledgeStore" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storageConnectionString" /> or <paramref name="projections" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.SearchIndexerDataIdentity Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Search.Documents.Indexes.Models.SearchIndexerDataIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As SearchIndexerDataIdentity" />
      <MemberSignature Language="F#" Value="member this.Identity : Azure.Search.Documents.Indexes.Models.SearchIndexerDataIdentity with get, set" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.SearchIndexerDataIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The user-assigned managed identity used for connections to Azure Storage when writing knowledge store projections. If the connection string indicates an identity (ResourceId) and it's not specified, the system-assigned managed identity is used. On updates to the indexer, if the identity is unspecified, the value remains unchanged. If set to "none", the value of this property is cleared.
            Please note <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataIdentity" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataNoneIdentity" /> and <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataUserAssignedIdentity" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected virtual void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="abstract member JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="knowledgeStore.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.SearchIndexerKnowledgeStoreParameters Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Search.Documents.Indexes.Models.SearchIndexerKnowledgeStoreParameters Parameters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As SearchIndexerKnowledgeStoreParameters" />
      <MemberSignature Language="F#" Value="member this.Parameters : Azure.Search.Documents.Indexes.Models.SearchIndexerKnowledgeStoreParameters with get, set" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.SearchIndexerKnowledgeStoreParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A dictionary of knowledge store-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; Projections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt; Projections" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.Projections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Projections As IList(Of KnowledgeStoreProjection)" />
      <MemberSignature Language="F#" Value="member this.Projections : System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.Projections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of additional projections to perform during indexing. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageConnectionString">
      <MemberSignature Language="C#" Value="public string StorageConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StorageConnectionString" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.StorageConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property StorageConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.StorageConnectionString : string with get, set" Usage="Azure.Search.Documents.Indexes.Models.KnowledgeStore.StorageConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The connection string to the storage account projections will be stored in. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.KnowledgeStore IJsonModel&lt;KnowledgeStore&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.KnowledgeStore System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#KnowledgeStore&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As KnowledgeStore Implements IJsonModel(Of KnowledgeStore).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore" Usage="knowledgeStore.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.KnowledgeStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;KnowledgeStore&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#KnowledgeStore&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of KnowledgeStore).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="knowledgeStore.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.KnowledgeStore IPersistableModel&lt;KnowledgeStore&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.KnowledgeStore System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#KnowledgeStore&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As KnowledgeStore Implements IPersistableModel(Of KnowledgeStore).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.KnowledgeStore" Usage="knowledgeStore.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.KnowledgeStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;KnowledgeStore&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#KnowledgeStore&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of KnowledgeStore).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="knowledgeStore.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;KnowledgeStore&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#KnowledgeStore&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of KnowledgeStore).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="knowledgeStore.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.KnowledgeStore&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
