<Type Name="SplitSkill" FullName="Azure.Search.Documents.Indexes.Models.SplitSkill">
  <TypeSignature Language="C#" Value="public class SplitSkill : Azure.Search.Documents.Indexes.Models.SearchIndexerSkill" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplitSkill extends Azure.Search.Documents.Indexes.Models.SearchIndexerSkill" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="DocId" Value="T:Azure.Search.Documents.Indexes.Models.SplitSkill" />
  <TypeSignature Language="VB.NET" Value="Public Class SplitSkill&#xA;Inherits SearchIndexerSkill" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="F#" Value="type SplitSkill = class&#xA;    inherit SearchIndexerSkill" FrameworkAlternate="azure-dotnet" />
  <TypeSignature Language="C#" Value="public class SplitSkill : Azure.Search.Documents.Indexes.Models.SearchIndexerSkill, System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplitSkill extends Azure.Search.Documents.Indexes.Models.SearchIndexerSkill implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.Search.Documents.Indexes.Models.SplitSkill&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.Search.Documents.Indexes.Models.SplitSkill&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="VB.NET" Value="Public Class SplitSkill&#xA;Inherits SearchIndexerSkill&#xA;Implements IJsonModel(Of SplitSkill), IPersistableModel(Of SplitSkill)" FrameworkAlternate="azure-dotnet-preview" />
  <TypeSignature Language="F#" Value="type SplitSkill = class&#xA;    inherit SearchIndexerSkill&#xA;    interface IJsonModel&lt;SplitSkill&gt;&#xA;    interface IPersistableModel&lt;SplitSkill&gt;" FrameworkAlternate="azure-dotnet-preview" />
  <AssemblyInfo>
    <AssemblyName>Azure.Search.Documents</AssemblyName>
    <AssemblyVersion>11.2.0.0</AssemblyVersion>
    <AssemblyVersion>11.2.1.0</AssemblyVersion>
    <AssemblyVersion>11.3.0.0</AssemblyVersion>
    <AssemblyVersion>11.4.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.0.0</AssemblyVersion>
    <AssemblyVersion>11.5.1.0</AssemblyVersion>
    <AssemblyVersion>11.6.0.0</AssemblyVersion>
    <AssemblyVersion>11.6.1.0</AssemblyVersion>
    <AssemblyVersion>11.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Search.Documents.Indexes.Models.SearchIndexerSkill</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="azure-dotnet-preview">
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A skill to split a string into chunks of text. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplitSkill (System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry&gt; inputs, System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry&gt; outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry&gt; inputs, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry&gt; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputs As IEnumerable(Of InputFieldMappingEntry), outputs As IEnumerable(Of OutputFieldMappingEntry))" />
      <MemberSignature Language="F#" Value="new Azure.Search.Documents.Indexes.Models.SplitSkill : seq&lt;Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry&gt; * seq&lt;Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry&gt; -&gt; Azure.Search.Documents.Indexes.Models.SplitSkill" Usage="new Azure.Search.Documents.Indexes.Models.SplitSkill (inputs, outputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry&gt;" />
        <Parameter Name="outputs" Type="System.Collections.Generic.IEnumerable&lt;Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
        <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.SplitSkill" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AzureOpenAITokenizerParameters">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.AzureOpenAITokenizerParameters AzureOpenAITokenizerParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Search.Documents.Indexes.Models.AzureOpenAITokenizerParameters AzureOpenAITokenizerParameters" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.AzureOpenAITokenizerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AzureOpenAITokenizerParameters As AzureOpenAITokenizerParameters" />
      <MemberSignature Language="F#" Value="member this.AzureOpenAITokenizerParameters : Azure.Search.Documents.Indexes.Models.AzureOpenAITokenizerParameters with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.AzureOpenAITokenizerParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.AzureOpenAITokenizerParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Only applies if the unit is set to azureOpenAITokens. If specified, the splitSkill will use these parameters when performing the tokenization. The parameters are a valid 'encoderModelName' and an optional 'allowedSpecialTokens' property. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLanguageCode">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.SplitSkillLanguage? DefaultLanguageCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.SplitSkillLanguage&gt; DefaultLanguageCode" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.DefaultLanguageCode" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultLanguageCode As Nullable(Of SplitSkillLanguage)" />
      <MemberSignature Language="F#" Value="member this.DefaultLanguageCode : Nullable&lt;Azure.Search.Documents.Indexes.Models.SplitSkillLanguage&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.DefaultLanguageCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.SplitSkillLanguage&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A value indicating which language code to use. Default is `en`. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonModelWriteCore">
      <MemberSignature Language="C#" Value="protected override void JsonModelWriteCore (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void JsonModelWriteCore(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.JsonModelWriteCore(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub JsonModelWriteCore (writer As Utf8JsonWriter, options As ModelReaderWriterOptions)" />
      <MemberSignature Language="F#" Value="override this.JsonModelWriteCore : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="splitSkill.JsonModelWriteCore (writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer"> The JSON writer. </param>
        <param name="options"> The client options for reading and writing models. </param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumPageLength">
      <MemberSignature Language="C#" Value="public int? MaximumPageLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaximumPageLength" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.MaximumPageLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumPageLength As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaximumPageLength : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.MaximumPageLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The desired maximum page length. Default is 10000. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumPagesToTake">
      <MemberSignature Language="C#" Value="public int? MaximumPagesToTake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaximumPagesToTake" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.MaximumPagesToTake" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumPagesToTake As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaximumPagesToTake : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.MaximumPagesToTake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Only applicable when textSplitMode is set to 'pages'. If specified, the SplitSkill will discontinue splitting after processing the first 'maximumPagesToTake' pages, in order to improve performance when only a few initial pages are needed from each document. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageOverlapLength">
      <MemberSignature Language="C#" Value="public int? PageOverlapLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; PageOverlapLength" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.PageOverlapLength" />
      <MemberSignature Language="VB.NET" Value="Public Property PageOverlapLength As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.PageOverlapLength : Nullable&lt;int&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.PageOverlapLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Only applicable when textSplitMode is set to 'pages'. If specified, n+1th chunk will start with this number of characters/tokens from the end of the nth chunk. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.SplitSkill IJsonModel&lt;SplitSkill&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.SplitSkill System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#SplitSkill&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As SplitSkill Implements IJsonModel(Of SplitSkill).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.SplitSkill&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.SplitSkill" Usage="splitSkill.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.SplitSkill</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;SplitSkill&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.System#ClientModel#Primitives#IJsonModel&lt;Azure#Search#Documents#Indexes#Models#SplitSkill&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of SplitSkill).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="splitSkill.System.ClientModel.Primitives.IJsonModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.Search.Documents.Indexes.Models.SplitSkill IPersistableModel&lt;SplitSkill&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.Search.Documents.Indexes.Models.SplitSkill System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#SplitSkill&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As SplitSkill Implements IPersistableModel(Of SplitSkill).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.SplitSkill&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.Search.Documents.Indexes.Models.SplitSkill" Usage="splitSkill.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Search.Documents.Indexes.Models.SplitSkill</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;SplitSkill&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#SplitSkill&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of SplitSkill).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="splitSkill.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;SplitSkill&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Search.Documents.Indexes.Models.SplitSkill.System#ClientModel#Primitives#IPersistableModel&lt;Azure#Search#Documents#Indexes#Models#SplitSkill&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of SplitSkill).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="splitSkill.System.ClientModel.Primitives.IPersistableModel&lt;Azure.Search.Documents.Indexes.Models.SplitSkill&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TextSplitMode">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.TextSplitMode? TextSplitMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.TextSplitMode&gt; TextSplitMode" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.TextSplitMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TextSplitMode As Nullable(Of TextSplitMode)" />
      <MemberSignature Language="F#" Value="member this.TextSplitMode : Nullable&lt;Azure.Search.Documents.Indexes.Models.TextSplitMode&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.TextSplitMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.6.1.0</AssemblyVersion>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.TextSplitMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A value indicating which split mode to perform. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unit">
      <MemberSignature Language="C#" Value="public Azure.Search.Documents.Indexes.Models.SplitSkillUnit? Unit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.Search.Documents.Indexes.Models.SplitSkillUnit&gt; Unit" />
      <MemberSignature Language="DocId" Value="P:Azure.Search.Documents.Indexes.Models.SplitSkill.Unit" />
      <MemberSignature Language="VB.NET" Value="Public Property Unit As Nullable(Of SplitSkillUnit)" />
      <MemberSignature Language="F#" Value="member this.Unit : Nullable&lt;Azure.Search.Documents.Indexes.Models.SplitSkillUnit&gt; with get, set" Usage="Azure.Search.Documents.Indexes.Models.SplitSkill.Unit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Search.Documents</AssemblyName>
        <AssemblyVersion>11.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.Search.Documents.Indexes.Models.SplitSkillUnit&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Only applies if textSplitMode is set to pages. There are two possible values. The choice of the values will decide the length (maximumPageLength and pageOverlapLength) measurement. The default is 'characters', which means the length will be measured by character. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
