<Type Name="AzureAIProjectsModelFactory" FullName="Azure.AI.Projects.AzureAIProjectsModelFactory">
  <TypeSignature Language="C#" Value="public static class AzureAIProjectsModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AzureAIProjectsModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.AzureAIProjectsModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class AzureAIProjectsModelFactory" />
  <TypeSignature Language="F#" Value="type AzureAIProjectsModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A factory class for creating instances of the models for mocking. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AgentEvaluation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AgentEvaluation AgentEvaluation (string id = default, string status = default, string error = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.AgentEvaluationResult&gt; result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AgentEvaluation AgentEvaluation(string id, string status, string error, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Projects.AgentEvaluationResult&gt; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluation(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Projects.AgentEvaluationResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentEvaluation (Optional id As String = Nothing, Optional status As String = Nothing, Optional error As String = Nothing, Optional result As IEnumerable(Of AgentEvaluationResult) = Nothing) As AgentEvaluation" />
      <MemberSignature Language="F#" Value="static member AgentEvaluation : string * string * string * seq&lt;Azure.AI.Projects.AgentEvaluationResult&gt; -&gt; Azure.AI.Projects.AgentEvaluation" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluation (id, status, error, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AgentEvaluation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
        <Parameter Name="result" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.AgentEvaluationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Identifier of the agent evaluation run. </param>
        <param name="status"> Status of the agent evaluation. Options: Running, Completed, Failed. </param>
        <param name="error"> The reason of the request failure for the long running process, if applicable. </param>
        <param name="result"> The agent evaluation result. </param>
        <summary> Evaluation response for agent evaluation run. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AgentEvaluation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentEvaluationRedactionConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AgentEvaluationRedactionConfiguration AgentEvaluationRedactionConfiguration (bool? redactScoreProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AgentEvaluationRedactionConfiguration AgentEvaluationRedactionConfiguration(valuetype System.Nullable`1&lt;bool&gt; redactScoreProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationRedactionConfiguration(System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentEvaluationRedactionConfiguration (Optional redactScoreProperties As Nullable(Of Boolean) = Nothing) As AgentEvaluationRedactionConfiguration" />
      <MemberSignature Language="F#" Value="static member AgentEvaluationRedactionConfiguration : Nullable&lt;bool&gt; -&gt; Azure.AI.Projects.AgentEvaluationRedactionConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationRedactionConfiguration redactScoreProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AgentEvaluationRedactionConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redactScoreProperties" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="redactScoreProperties"> Redact score properties. If not specified, the default is to redact in production. </param>
        <summary> The redaction configuration will allow the user to control what is redacted. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AgentEvaluationRedactionConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentEvaluationRequest">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AgentEvaluationRequest AgentEvaluationRequest (string runId = default, string threadId = default, System.Collections.Generic.IDictionary&lt;string,Azure.AI.Projects.EvaluatorConfiguration&gt; evaluators = default, Azure.AI.Projects.AgentEvaluationSamplingConfiguration samplingConfiguration = default, Azure.AI.Projects.AgentEvaluationRedactionConfiguration redactionConfiguration = default, string appInsightsConnectionString = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AgentEvaluationRequest AgentEvaluationRequest(string runId, string threadId, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.AI.Projects.EvaluatorConfiguration&gt; evaluators, class Azure.AI.Projects.AgentEvaluationSamplingConfiguration samplingConfiguration, class Azure.AI.Projects.AgentEvaluationRedactionConfiguration redactionConfiguration, string appInsightsConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationRequest(System.String,System.String,System.Collections.Generic.IDictionary{System.String,Azure.AI.Projects.EvaluatorConfiguration},Azure.AI.Projects.AgentEvaluationSamplingConfiguration,Azure.AI.Projects.AgentEvaluationRedactionConfiguration,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentEvaluationRequest (Optional runId As String = Nothing, Optional threadId As String = Nothing, Optional evaluators As IDictionary(Of String, EvaluatorConfiguration) = Nothing, Optional samplingConfiguration As AgentEvaluationSamplingConfiguration = Nothing, Optional redactionConfiguration As AgentEvaluationRedactionConfiguration = Nothing, Optional appInsightsConnectionString As String = Nothing) As AgentEvaluationRequest" />
      <MemberSignature Language="F#" Value="static member AgentEvaluationRequest : string * string * System.Collections.Generic.IDictionary&lt;string, Azure.AI.Projects.EvaluatorConfiguration&gt; * Azure.AI.Projects.AgentEvaluationSamplingConfiguration * Azure.AI.Projects.AgentEvaluationRedactionConfiguration * string -&gt; Azure.AI.Projects.AgentEvaluationRequest" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationRequest (runId, threadId, evaluators, samplingConfiguration, redactionConfiguration, appInsightsConnectionString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AgentEvaluationRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="evaluators" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.AI.Projects.EvaluatorConfiguration&gt;" />
        <Parameter Name="samplingConfiguration" Type="Azure.AI.Projects.AgentEvaluationSamplingConfiguration" />
        <Parameter Name="redactionConfiguration" Type="Azure.AI.Projects.AgentEvaluationRedactionConfiguration" />
        <Parameter Name="appInsightsConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="runId"> Identifier of the agent run. </param>
        <param name="threadId"> Identifier of the agent thread. This field is mandatory currently, but it will be optional in the future. </param>
        <param name="evaluators"> Evaluators to be used for the evaluation. </param>
        <param name="samplingConfiguration"> Sampling configuration for the evaluation. </param>
        <param name="redactionConfiguration"> Redaction configuration for the evaluation. </param>
        <param name="appInsightsConnectionString"> Pass the AppInsights connection string to the agent evaluation for the evaluation results and the errors logs. </param>
        <summary> Evaluation request for agent run. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AgentEvaluationRequest" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentEvaluationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AgentEvaluationResult AgentEvaluationResult (string evaluator = default, string evaluatorId = default, float score = 0, string status = default, string reason = default, string version = default, string threadId = default, string runId = default, string error = default, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDetails = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AgentEvaluationResult AgentEvaluationResult(string evaluator, string evaluatorId, float32 score, string status, string reason, string version, string threadId, string runId, string error, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDetails) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationResult(System.String,System.String,System.Single,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentEvaluationResult (Optional evaluator As String = Nothing, Optional evaluatorId As String = Nothing, Optional score As Single = 0, Optional status As String = Nothing, Optional reason As String = Nothing, Optional version As String = Nothing, Optional threadId As String = Nothing, Optional runId As String = Nothing, Optional error As String = Nothing, Optional additionalDetails As IDictionary(Of String, String) = Nothing) As AgentEvaluationResult" />
      <MemberSignature Language="F#" Value="static member AgentEvaluationResult : string * string * single * string * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.AgentEvaluationResult" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationResult (evaluator, evaluatorId, score, status, reason, version, threadId, runId, error, additionalDetails)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AgentEvaluationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="System.String" />
        <Parameter Name="evaluatorId" Type="System.String" />
        <Parameter Name="score" Type="System.Single" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="threadId" Type="System.String" />
        <Parameter Name="runId" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
        <Parameter Name="additionalDetails" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="evaluator"> Evaluator's name. This is the name of the evaluator that was used to evaluate the agent's completion. </param>
        <param name="evaluatorId"> Identifier of the evaluator. </param>
        <param name="score"> Score of the given evaluator. No restriction on range. </param>
        <param name="status"> Status of the evaluator result. Options: Running, Completed, Failed, NotApplicable. </param>
        <param name="reason"> Reasoning for the evaluation result. </param>
        <param name="version"> Version of the evaluator that was used to evaluate the agent's completion. </param>
        <param name="threadId"> The unique identifier of the thread. </param>
        <param name="runId"> The unique identifier of the run. </param>
        <param name="error"> A string explaining why there was an error, if applicable. </param>
        <param name="additionalDetails"> Additional properties relevant to the evaluator. These will differ between evaluators. </param>
        <summary> Result for the agent evaluation evaluator run. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AgentEvaluationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgentEvaluationSamplingConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AgentEvaluationSamplingConfiguration AgentEvaluationSamplingConfiguration (string name = default, float samplingPercent = 0, float maxRequestRate = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AgentEvaluationSamplingConfiguration AgentEvaluationSamplingConfiguration(string name, float32 samplingPercent, float32 maxRequestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationSamplingConfiguration(System.String,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AgentEvaluationSamplingConfiguration (Optional name As String = Nothing, Optional samplingPercent As Single = 0, Optional maxRequestRate As Single = 0) As AgentEvaluationSamplingConfiguration" />
      <MemberSignature Language="F#" Value="static member AgentEvaluationSamplingConfiguration : string * single * single -&gt; Azure.AI.Projects.AgentEvaluationSamplingConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AgentEvaluationSamplingConfiguration (name, samplingPercent, maxRequestRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AgentEvaluationSamplingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="samplingPercent" Type="System.Single" />
        <Parameter Name="maxRequestRate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the sampling strategy. </param>
        <param name="samplingPercent"> Percentage of sampling per hour (0-100). </param>
        <param name="maxRequestRate"> Maximum request rate per hour (0 to 1000). </param>
        <summary> Definition for sampling strategy. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AgentEvaluationSamplingConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApiKeyCredentials">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ApiKeyCredentials ApiKeyCredentials (string apiKey = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ApiKeyCredentials ApiKeyCredentials(string apiKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ApiKeyCredentials(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ApiKeyCredentials (Optional apiKey As String = Nothing) As ApiKeyCredentials" />
      <MemberSignature Language="F#" Value="static member ApiKeyCredentials : string -&gt; Azure.AI.Projects.ApiKeyCredentials" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ApiKeyCredentials apiKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ApiKeyCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="apiKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="apiKey"> API Key. </param>
        <summary> API Key Credential definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ApiKeyCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssetDeployment">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AssetDeployment AssetDeployment (string type = default, string name = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AssetDeployment AssetDeployment(string type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AssetDeployment(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssetDeployment (Optional type As String = Nothing, Optional name As String = Nothing) As AssetDeployment" />
      <MemberSignature Language="F#" Value="static member AssetDeployment : string * string -&gt; Azure.AI.Projects.AssetDeployment" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AssetDeployment (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AssetDeployment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"> The type of the deployment. </param>
        <param name="name"> Name of the deployment. </param>
        <summary>
            Model Deployment Definition
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ModelDeployment(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Azure.AI.Projects.ModelDeploymentSku,System.String)" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AssetDeployment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssistantMessage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AssistantMessage AssistantMessage (string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AssistantMessage AssistantMessage(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AssistantMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssistantMessage (Optional content As String = Nothing) As AssistantMessage" />
      <MemberSignature Language="F#" Value="static member AssistantMessage : string -&gt; Azure.AI.Projects.AssistantMessage" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AssistantMessage content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AssistantMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> Response content generated by the assistant. </param>
        <summary> A message generated by the assistant in response to previous messages. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AssistantMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzureAISearchIndex">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AzureAISearchIndex AzureAISearchIndex (string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string connectionName = default, string indexName = default, Azure.AI.Projects.FieldMapping fieldMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AzureAISearchIndex AzureAISearchIndex(string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string connectionName, string indexName, class Azure.AI.Projects.FieldMapping fieldMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AzureAISearchIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.AI.Projects.FieldMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AzureAISearchIndex (Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional connectionName As String = Nothing, Optional indexName As String = Nothing, Optional fieldMapping As FieldMapping = Nothing) As AzureAISearchIndex" />
      <MemberSignature Language="F#" Value="static member AzureAISearchIndex : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Azure.AI.Projects.FieldMapping -&gt; Azure.AI.Projects.AzureAISearchIndex" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AzureAISearchIndex (id, name, version, description, tags, connectionName, indexName, fieldMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AzureAISearchIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="indexName" Type="System.String" />
        <Parameter Name="fieldMapping" Type="Azure.AI.Projects.FieldMapping" />
      </Parameters>
      <Docs>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <param name="connectionName"> Name of connection to Azure AI Search. </param>
        <param name="indexName"> Name of index in Azure AI Search resource to attach. </param>
        <param name="fieldMapping"> Field mapping configuration. </param>
        <summary> Azure AI Search Index Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AzureAISearchIndex" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AzureOpenAIModelConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.AzureOpenAIModelConfiguration AzureOpenAIModelConfiguration (string modelDeploymentName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.AzureOpenAIModelConfiguration AzureOpenAIModelConfiguration(string modelDeploymentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AzureOpenAIModelConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AzureOpenAIModelConfiguration (Optional modelDeploymentName As String = Nothing) As AzureOpenAIModelConfiguration" />
      <MemberSignature Language="F#" Value="static member AzureOpenAIModelConfiguration : string -&gt; Azure.AI.Projects.AzureOpenAIModelConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.AzureOpenAIModelConfiguration modelDeploymentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.AzureOpenAIModelConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelDeploymentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelDeploymentName"> Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based `connection_name/deployment_name` (e.g. `my-aoai-connection/gpt-4o`). </param>
        <summary> Azure OpenAI model configuration. The API version would be selected by the service for querying the model. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.AzureOpenAIModelConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCredentials">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.BaseCredentials BaseCredentials (string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.BaseCredentials BaseCredentials(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.BaseCredentials(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BaseCredentials (Optional type As String = Nothing) As BaseCredentials" />
      <MemberSignature Language="F#" Value="static member BaseCredentials : string -&gt; Azure.AI.Projects.BaseCredentials" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.BaseCredentials type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.BaseCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"> The type of credential used by the connection. </param>
        <summary>
            A base class for connection credentials
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ApiKeyCredentials(System.String)" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.EntraIDCredentials" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.CustomCredential(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.SASCredentials(System.String)" />, and <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.NoAuthenticationCredentials" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.BaseCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobReference">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.BlobReference BlobReference (Uri blobUri = default, string storageAccountArmId = default, Azure.AI.Projects.BlobReferenceSasCredential credential = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.BlobReference BlobReference(class System.Uri blobUri, string storageAccountArmId, class Azure.AI.Projects.BlobReferenceSasCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.BlobReference(System.Uri,System.String,Azure.AI.Projects.BlobReferenceSasCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobReference (Optional blobUri As Uri = Nothing, Optional storageAccountArmId As String = Nothing, Optional credential As BlobReferenceSasCredential = Nothing) As BlobReference" />
      <MemberSignature Language="F#" Value="static member BlobReference : Uri * string * Azure.AI.Projects.BlobReferenceSasCredential -&gt; Azure.AI.Projects.BlobReference" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.BlobReference (blobUri, storageAccountArmId, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.BlobReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobUri" Type="System.Uri" />
        <Parameter Name="storageAccountArmId" Type="System.String" />
        <Parameter Name="credential" Type="Azure.AI.Projects.BlobReferenceSasCredential" />
      </Parameters>
      <Docs>
        <param name="blobUri" />
        <param name="storageAccountArmId"> ARM ID of the storage account to use. </param>
        <param name="credential"> Credential info to access the storage account. </param>
        <summary> Blob reference details. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.BlobReference" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlobReferenceSasCredential">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.BlobReferenceSasCredential BlobReferenceSasCredential (Uri sasUri = default, string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.BlobReferenceSasCredential BlobReferenceSasCredential(class System.Uri sasUri, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.BlobReferenceSasCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BlobReferenceSasCredential (Optional sasUri As Uri = Nothing, Optional type As String = Nothing) As BlobReferenceSasCredential" />
      <MemberSignature Language="F#" Value="static member BlobReferenceSasCredential : Uri * string -&gt; Azure.AI.Projects.BlobReferenceSasCredential" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.BlobReferenceSasCredential (sasUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.BlobReferenceSasCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sasUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sasUri" />
        <param name="type"> Type of credential. </param>
        <summary> SAS Credential definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.BlobReferenceSasCredential" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionProperties">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ConnectionProperties ConnectionProperties (string name = default, string id = default, Azure.AI.Projects.ConnectionType type = default, string target = default, bool isDefault = false, Azure.AI.Projects.BaseCredentials credentials = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; metadata = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ConnectionProperties ConnectionProperties(string name, string id, valuetype Azure.AI.Projects.ConnectionType type, string target, bool isDefault, class Azure.AI.Projects.BaseCredentials credentials, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ConnectionProperties(System.String,System.String,Azure.AI.Projects.ConnectionType,System.String,System.Boolean,Azure.AI.Projects.BaseCredentials,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConnectionProperties (Optional name As String = Nothing, Optional id As String = Nothing, Optional type As ConnectionType = Nothing, Optional target As String = Nothing, Optional isDefault As Boolean = false, Optional credentials As BaseCredentials = Nothing, Optional metadata As IReadOnlyDictionary(Of String, String) = Nothing) As ConnectionProperties" />
      <MemberSignature Language="F#" Value="static member ConnectionProperties : string * string * Azure.AI.Projects.ConnectionType * string * bool * Azure.AI.Projects.BaseCredentials * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.ConnectionProperties" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ConnectionProperties (name, id, type, target, isDefault, credentials, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ConnectionProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="type" Type="Azure.AI.Projects.ConnectionType" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="isDefault" Type="System.Boolean" />
        <Parameter Name="credentials" Type="Azure.AI.Projects.BaseCredentials" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name"> The friendly name of the connection, provided by the user. </param>
        <param name="id"> A unique identifier for the connection, generated by the service. </param>
        <param name="type"> Category of the connection. </param>
        <param name="target"> The connection URL to be used for this service. </param>
        <param name="isDefault"> Whether the connection is tagged as the default connection of its type. </param>
        <param name="credentials"> The credentials used by the connection. </param>
        <param name="metadata"> Metadata of the connection. </param>
        <summary> Response from the list and get connections operations. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ConnectionProperties" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CosmosDBIndex">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.CosmosDBIndex CosmosDBIndex (string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string connectionName = default, string databaseName = default, string containerName = default, Azure.AI.Projects.EmbeddingConfiguration embeddingConfiguration = default, Azure.AI.Projects.FieldMapping fieldMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.CosmosDBIndex CosmosDBIndex(string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string connectionName, string databaseName, string containerName, class Azure.AI.Projects.EmbeddingConfiguration embeddingConfiguration, class Azure.AI.Projects.FieldMapping fieldMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.CosmosDBIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,Azure.AI.Projects.EmbeddingConfiguration,Azure.AI.Projects.FieldMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CosmosDBIndex (Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional connectionName As String = Nothing, Optional databaseName As String = Nothing, Optional containerName As String = Nothing, Optional embeddingConfiguration As EmbeddingConfiguration = Nothing, Optional fieldMapping As FieldMapping = Nothing) As CosmosDBIndex" />
      <MemberSignature Language="F#" Value="static member CosmosDBIndex : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * string * Azure.AI.Projects.EmbeddingConfiguration * Azure.AI.Projects.FieldMapping -&gt; Azure.AI.Projects.CosmosDBIndex" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.CosmosDBIndex (id, name, version, description, tags, connectionName, databaseName, containerName, embeddingConfiguration, fieldMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.CosmosDBIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="containerName" Type="System.String" />
        <Parameter Name="embeddingConfiguration" Type="Azure.AI.Projects.EmbeddingConfiguration" />
        <Parameter Name="fieldMapping" Type="Azure.AI.Projects.FieldMapping" />
      </Parameters>
      <Docs>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <param name="connectionName"> Name of connection to CosmosDB. </param>
        <param name="databaseName"> Name of the CosmosDB Database. </param>
        <param name="containerName"> Name of CosmosDB Container. </param>
        <param name="embeddingConfiguration"> Embedding model configuration. </param>
        <param name="fieldMapping"> Field mapping configuration. </param>
        <summary> CosmosDB Vector Store Index Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.CosmosDBIndex" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCredential">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.CustomCredential CustomCredential (System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; keys = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.CustomCredential CustomCredential(class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.CustomCredential(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomCredential (Optional keys As IReadOnlyDictionary(Of String, String) = Nothing) As CustomCredential" />
      <MemberSignature Language="F#" Value="static member CustomCredential : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.CustomCredential" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.CustomCredential keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.CustomCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="keys"> The credential type. </param>
        <summary> Custom credential definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.CustomCredential" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatasetCredential">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.DatasetCredential DatasetCredential (Azure.AI.Projects.BlobReference blobReference = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.DatasetCredential DatasetCredential(class Azure.AI.Projects.BlobReference blobReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.DatasetCredential(Azure.AI.Projects.BlobReference)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DatasetCredential (Optional blobReference As BlobReference = Nothing) As DatasetCredential" />
      <MemberSignature Language="F#" Value="static member DatasetCredential : Azure.AI.Projects.BlobReference -&gt; Azure.AI.Projects.DatasetCredential" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.DatasetCredential blobReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.DatasetCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobReference" Type="Azure.AI.Projects.BlobReference" />
      </Parameters>
      <Docs>
        <param name="blobReference"> Credential info to access the storage account. </param>
        <summary> Represents a reference to a blob for consumption. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.DatasetCredential" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatasetVersion">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.DatasetVersion DatasetVersion (Uri dataUri = default, string type = default, bool? isReference = default, string connectionName = default, string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.DatasetVersion DatasetVersion(class System.Uri dataUri, string type, valuetype System.Nullable`1&lt;bool&gt; isReference, string connectionName, string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.DatasetVersion(System.Uri,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DatasetVersion (Optional dataUri As Uri = Nothing, Optional type As String = Nothing, Optional isReference As Nullable(Of Boolean) = Nothing, Optional connectionName As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As DatasetVersion" />
      <MemberSignature Language="F#" Value="static member DatasetVersion : Uri * string * Nullable&lt;bool&gt; * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.DatasetVersion" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.DatasetVersion (dataUri, type, isReference, connectionName, id, name, version, description, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.DatasetVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="isReference" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="dataUri" />
        <param name="type"> Dataset type. </param>
        <param name="isReference"> Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted. </param>
        <param name="connectionName"> The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset. </param>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <summary>
            DatasetVersion Definition
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.FileDatasetVersion(System.Uri,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" /> and <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.FolderDatasetVersion(System.Uri,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.DatasetVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeveloperMessage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.DeveloperMessage DeveloperMessage (string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.DeveloperMessage DeveloperMessage(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.DeveloperMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeveloperMessage (Optional content As String = Nothing) As DeveloperMessage" />
      <MemberSignature Language="F#" Value="static member DeveloperMessage : string -&gt; Azure.AI.Projects.DeveloperMessage" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.DeveloperMessage content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.DeveloperMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> Content provided by a developer to guide model behavior in an evaluation context. </param>
        <summary> A message authored by a developer to guide the model during evaluation. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.DeveloperMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddingConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.EmbeddingConfiguration EmbeddingConfiguration (string modelDeploymentName = default, string embeddingField = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.EmbeddingConfiguration EmbeddingConfiguration(string modelDeploymentName, string embeddingField) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.EmbeddingConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EmbeddingConfiguration (Optional modelDeploymentName As String = Nothing, Optional embeddingField As String = Nothing) As EmbeddingConfiguration" />
      <MemberSignature Language="F#" Value="static member EmbeddingConfiguration : string * string -&gt; Azure.AI.Projects.EmbeddingConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.EmbeddingConfiguration (modelDeploymentName, embeddingField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.EmbeddingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelDeploymentName" Type="System.String" />
        <Parameter Name="embeddingField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelDeploymentName"> Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection. </param>
        <param name="embeddingField"> Embedding field. </param>
        <summary> Embedding configuration class. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.EmbeddingConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntraIDCredentials">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.EntraIDCredentials EntraIDCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.EntraIDCredentials EntraIDCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.EntraIDCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntraIDCredentials () As EntraIDCredentials" />
      <MemberSignature Language="F#" Value="static member EntraIDCredentials : unit -&gt; Azure.AI.Projects.EntraIDCredentials" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.EntraIDCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.EntraIDCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Entra ID credential definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.EntraIDCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluation">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.Evaluation Evaluation (string name = default, Azure.AI.Projects.InputData data = default, string displayName = default, string description = default, string status = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; properties = default, System.Collections.Generic.IDictionary&lt;string,Azure.AI.Projects.EvaluatorConfiguration&gt; evaluators = default, Azure.AI.Projects.EvaluationTarget target = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.Evaluation Evaluation(string name, class Azure.AI.Projects.InputData data, string displayName, string description, string status, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; properties, class System.Collections.Generic.IDictionary`2&lt;string, class Azure.AI.Projects.EvaluatorConfiguration&gt; evaluators, class Azure.AI.Projects.EvaluationTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.Evaluation(System.String,Azure.AI.Projects.InputData,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Azure.AI.Projects.EvaluatorConfiguration},Azure.AI.Projects.EvaluationTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Evaluation (Optional name As String = Nothing, Optional data As InputData = Nothing, Optional displayName As String = Nothing, Optional description As String = Nothing, Optional status As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional properties As IDictionary(Of String, String) = Nothing, Optional evaluators As IDictionary(Of String, EvaluatorConfiguration) = Nothing, Optional target As EvaluationTarget = Nothing) As Evaluation" />
      <MemberSignature Language="F#" Value="static member Evaluation : string * Azure.AI.Projects.InputData * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Azure.AI.Projects.EvaluatorConfiguration&gt; * Azure.AI.Projects.EvaluationTarget -&gt; Azure.AI.Projects.Evaluation" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.Evaluation (name, data, displayName, description, status, tags, properties, evaluators, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.Evaluation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="Azure.AI.Projects.InputData" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="properties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="evaluators" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.AI.Projects.EvaluatorConfiguration&gt;" />
        <Parameter Name="target" Type="Azure.AI.Projects.EvaluationTarget" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the evaluation. </param>
        <param name="data"> Data for evaluation. </param>
        <param name="displayName"> Display Name for evaluation. It helps to find the evaluation easily in AI Foundry. It does not need to be unique. </param>
        <param name="description"> Description of the evaluation. It can be used to store additional information about the evaluation and is mutable. </param>
        <param name="status"> Status of the evaluation. It is set by service and is read-only. </param>
        <param name="tags"> Evaluation's tags. Unlike properties, tags are fully mutable. </param>
        <param name="properties"> Evaluation's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed. </param>
        <param name="evaluators"> Evaluators to be used for the evaluation. </param>
        <param name="target"> Specifies the type and configuration of the entity used for this evaluation. </param>
        <summary> Evaluation Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.Evaluation" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationTarget">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.EvaluationTarget EvaluationTarget (string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.EvaluationTarget EvaluationTarget(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.EvaluationTarget(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EvaluationTarget (Optional type As String = Nothing) As EvaluationTarget" />
      <MemberSignature Language="F#" Value="static member EvaluationTarget : string -&gt; Azure.AI.Projects.EvaluationTarget" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.EvaluationTarget type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.EvaluationTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"> Discriminator that defines the type of the evaluation target. </param>
        <summary>
            Abstract base model for defining evaluation targets.
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ModelResponseGenerationTarget(System.Collections.Generic.IEnumerable{Azure.AI.Projects.Message},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.EvaluationTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatorConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.EvaluatorConfiguration EvaluatorConfiguration (string id = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; initParams = default, System.Collections.Generic.IDictionary&lt;string,string&gt; dataMapping = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.EvaluatorConfiguration EvaluatorConfiguration(string id, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; initParams, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; dataMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.EvaluatorConfiguration(System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EvaluatorConfiguration (Optional id As String = Nothing, Optional initParams As IDictionary(Of String, BinaryData) = Nothing, Optional dataMapping As IDictionary(Of String, String) = Nothing) As EvaluatorConfiguration" />
      <MemberSignature Language="F#" Value="static member EvaluatorConfiguration : string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.EvaluatorConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.EvaluatorConfiguration (id, initParams, dataMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.EvaluatorConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="initParams" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
        <Parameter Name="dataMapping" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="id"> Identifier of the evaluator. </param>
        <param name="initParams"> Initialization parameters of the evaluator. </param>
        <param name="dataMapping"> Data parameters of the evaluator. </param>
        <summary> Evaluator Configuration. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.EvaluatorConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldMapping">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.FieldMapping FieldMapping (System.Collections.Generic.IEnumerable&lt;string&gt; contentFields = default, string filepathField = default, string titleField = default, string urlField = default, System.Collections.Generic.IEnumerable&lt;string&gt; vectorFields = default, System.Collections.Generic.IEnumerable&lt;string&gt; metadataFields = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.FieldMapping FieldMapping(class System.Collections.Generic.IEnumerable`1&lt;string&gt; contentFields, string filepathField, string titleField, string urlField, class System.Collections.Generic.IEnumerable`1&lt;string&gt; vectorFields, class System.Collections.Generic.IEnumerable`1&lt;string&gt; metadataFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.FieldMapping(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FieldMapping (Optional contentFields As IEnumerable(Of String) = Nothing, Optional filepathField As String = Nothing, Optional titleField As String = Nothing, Optional urlField As String = Nothing, Optional vectorFields As IEnumerable(Of String) = Nothing, Optional metadataFields As IEnumerable(Of String) = Nothing) As FieldMapping" />
      <MemberSignature Language="F#" Value="static member FieldMapping : seq&lt;string&gt; * string * string * string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Azure.AI.Projects.FieldMapping" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.FieldMapping (contentFields, filepathField, titleField, urlField, vectorFields, metadataFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.FieldMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentFields" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filepathField" Type="System.String" />
        <Parameter Name="titleField" Type="System.String" />
        <Parameter Name="urlField" Type="System.String" />
        <Parameter Name="vectorFields" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="metadataFields" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="contentFields"> List of fields with text content. </param>
        <param name="filepathField"> Path of file to be used as a source of text content. </param>
        <param name="titleField"> Field containing the title of the document. </param>
        <param name="urlField"> Field containing the url of the document. </param>
        <param name="vectorFields"> List of fields with vector content. </param>
        <param name="metadataFields"> List of fields with metadata content. </param>
        <summary> Field mapping configuration class. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.FieldMapping" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDatasetVersion">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.FileDatasetVersion FileDatasetVersion (Uri dataUri = default, bool? isReference = default, string connectionName = default, string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.FileDatasetVersion FileDatasetVersion(class System.Uri dataUri, valuetype System.Nullable`1&lt;bool&gt; isReference, string connectionName, string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.FileDatasetVersion(System.Uri,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileDatasetVersion (Optional dataUri As Uri = Nothing, Optional isReference As Nullable(Of Boolean) = Nothing, Optional connectionName As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As FileDatasetVersion" />
      <MemberSignature Language="F#" Value="static member FileDatasetVersion : Uri * Nullable&lt;bool&gt; * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.FileDatasetVersion" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.FileDatasetVersion (dataUri, isReference, connectionName, id, name, version, description, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.FileDatasetVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataUri" Type="System.Uri" />
        <Parameter Name="isReference" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="dataUri" />
        <param name="isReference"> Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted. </param>
        <param name="connectionName"> The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset. </param>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <summary> FileDatasetVersion Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.FileDatasetVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FolderDatasetVersion">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.FolderDatasetVersion FolderDatasetVersion (Uri dataUri = default, bool? isReference = default, string connectionName = default, string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.FolderDatasetVersion FolderDatasetVersion(class System.Uri dataUri, valuetype System.Nullable`1&lt;bool&gt; isReference, string connectionName, string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.FolderDatasetVersion(System.Uri,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FolderDatasetVersion (Optional dataUri As Uri = Nothing, Optional isReference As Nullable(Of Boolean) = Nothing, Optional connectionName As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As FolderDatasetVersion" />
      <MemberSignature Language="F#" Value="static member FolderDatasetVersion : Uri * Nullable&lt;bool&gt; * string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.FolderDatasetVersion" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.FolderDatasetVersion (dataUri, isReference, connectionName, id, name, version, description, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.FolderDatasetVersion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataUri" Type="System.Uri" />
        <Parameter Name="isReference" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="dataUri" />
        <param name="isReference"> Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted. </param>
        <param name="connectionName"> The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset. </param>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <summary> FileDatasetVersion Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.FolderDatasetVersion" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputData">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.InputData InputData (string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.InputData InputData(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.InputData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InputData (Optional type As String = Nothing) As InputData" />
      <MemberSignature Language="F#" Value="static member InputData : string -&gt; Azure.AI.Projects.InputData" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.InputData type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.InputData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"> Type of the data. </param>
        <summary>
            Abstract data class.
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.InputDataset(System.String)" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.InputData" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputDataset">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.InputDataset InputDataset (string id = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.InputDataset InputDataset(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.InputDataset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InputDataset (Optional id As String = Nothing) As InputDataset" />
      <MemberSignature Language="F#" Value="static member InputDataset : string -&gt; Azure.AI.Projects.InputDataset" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.InputDataset id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.InputDataset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Evaluation input data. </param>
        <summary> Dataset as source for evaluation. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.InputDataset" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedAzureAISearchIndex">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ManagedAzureAISearchIndex ManagedAzureAISearchIndex (string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, string vectorStoreId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ManagedAzureAISearchIndex ManagedAzureAISearchIndex(string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, string vectorStoreId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ManagedAzureAISearchIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ManagedAzureAISearchIndex (Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional vectorStoreId As String = Nothing) As ManagedAzureAISearchIndex" />
      <MemberSignature Language="F#" Value="static member ManagedAzureAISearchIndex : string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Azure.AI.Projects.ManagedAzureAISearchIndex" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ManagedAzureAISearchIndex (id, name, version, description, tags, vectorStoreId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ManagedAzureAISearchIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="vectorStoreId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <param name="vectorStoreId"> Vector store id of managed index. </param>
        <summary> Managed Azure AI Search Index Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ManagedAzureAISearchIndex" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.Message Message (string role = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.Message Message(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.Message(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Message (Optional role As String = Nothing) As Message" />
      <MemberSignature Language="F#" Value="static member Message : string -&gt; Azure.AI.Projects.Message" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.Message role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"> The role of the message author. Known values: 'system', 'assistant', 'developer', 'user'. </param>
        <summary>
            Abstract base model representing a single message in a conversation.
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.SystemMessage(System.String)" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.DeveloperMessage(System.String)" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.UserMessage(System.String)" />, and <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AssistantMessage(System.String)" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.Message" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelDeployment">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ModelDeployment ModelDeployment (string name = default, string modelName = default, string modelVersion = default, string modelPublisher = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; capabilities = default, Azure.AI.Projects.ModelDeploymentSku sku = default, string connectionName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ModelDeployment ModelDeployment(string name, string modelName, string modelVersion, string modelPublisher, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; capabilities, class Azure.AI.Projects.ModelDeploymentSku sku, string connectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ModelDeployment(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Azure.AI.Projects.ModelDeploymentSku,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelDeployment (Optional name As String = Nothing, Optional modelName As String = Nothing, Optional modelVersion As String = Nothing, Optional modelPublisher As String = Nothing, Optional capabilities As IReadOnlyDictionary(Of String, String) = Nothing, Optional sku As ModelDeploymentSku = Nothing, Optional connectionName As String = Nothing) As ModelDeployment" />
      <MemberSignature Language="F#" Value="static member ModelDeployment : string * string * string * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * Azure.AI.Projects.ModelDeploymentSku * string -&gt; Azure.AI.Projects.ModelDeployment" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ModelDeployment (name, modelName, modelVersion, modelPublisher, capabilities, sku, connectionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ModelDeployment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="modelName" Type="System.String" />
        <Parameter Name="modelVersion" Type="System.String" />
        <Parameter Name="modelPublisher" Type="System.String" />
        <Parameter Name="capabilities" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="sku" Type="Azure.AI.Projects.ModelDeploymentSku" />
        <Parameter Name="connectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the deployment. </param>
        <param name="modelName"> Publisher-specific name of the deployed model. </param>
        <param name="modelVersion"> Publisher-specific version of the deployed model. </param>
        <param name="modelPublisher"> Name of the deployed model's publisher. </param>
        <param name="capabilities"> Capabilities of deployed model. </param>
        <param name="sku"> Sku of the model deployment. </param>
        <param name="connectionName"> Name of the connection the deployment comes from. </param>
        <summary> Model Deployment Definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ModelDeployment" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelDeploymentSku">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ModelDeploymentSku ModelDeploymentSku (long capacity = 0, string family = default, string name = default, string size = default, string tier = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ModelDeploymentSku ModelDeploymentSku(int64 capacity, string family, string name, string size, string tier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ModelDeploymentSku(System.Int64,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelDeploymentSku (Optional capacity As Long = 0, Optional family As String = Nothing, Optional name As String = Nothing, Optional size As String = Nothing, Optional tier As String = Nothing) As ModelDeploymentSku" />
      <MemberSignature Language="F#" Value="static member ModelDeploymentSku : int64 * string * string * string * string -&gt; Azure.AI.Projects.ModelDeploymentSku" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ModelDeploymentSku (capacity, family, name, size, tier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ModelDeploymentSku</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="family" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.String" />
        <Parameter Name="tier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="capacity"> Sku capacity. </param>
        <param name="family"> Sku family. </param>
        <param name="name"> Sku name. </param>
        <param name="size"> Sku size. </param>
        <param name="tier"> Sku tier. </param>
        <summary> Sku information. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ModelDeploymentSku" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelResponseGenerationTarget">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.ModelResponseGenerationTarget ModelResponseGenerationTarget (System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.Message&gt; baseMessages = default, string modelDeploymentName = default, System.Collections.Generic.IDictionary&lt;string,BinaryData&gt; modelParams = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.ModelResponseGenerationTarget ModelResponseGenerationTarget(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Projects.Message&gt; baseMessages, string modelDeploymentName, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; modelParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ModelResponseGenerationTarget(System.Collections.Generic.IEnumerable{Azure.AI.Projects.Message},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModelResponseGenerationTarget (Optional baseMessages As IEnumerable(Of Message) = Nothing, Optional modelDeploymentName As String = Nothing, Optional modelParams As IDictionary(Of String, BinaryData) = Nothing) As ModelResponseGenerationTarget" />
      <MemberSignature Language="F#" Value="static member ModelResponseGenerationTarget : seq&lt;Azure.AI.Projects.Message&gt; * string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; -&gt; Azure.AI.Projects.ModelResponseGenerationTarget" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.ModelResponseGenerationTarget (baseMessages, modelDeploymentName, modelParams)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.ModelResponseGenerationTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseMessages" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.Message&gt;" />
        <Parameter Name="modelDeploymentName" Type="System.String" />
        <Parameter Name="modelParams" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="baseMessages"> A list of messages comprising the conversation so far. </param>
        <param name="modelDeploymentName"> The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/modelDeploymentName'. </param>
        <param name="modelParams"> Optional parameters passed to the model for evaluation. </param>
        <summary> Evaluation target for generating responses using a given model and dataset. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.ModelResponseGenerationTarget" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAuthenticationCredentials">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.NoAuthenticationCredentials NoAuthenticationCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.NoAuthenticationCredentials NoAuthenticationCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.NoAuthenticationCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoAuthenticationCredentials () As NoAuthenticationCredentials" />
      <MemberSignature Language="F#" Value="static member NoAuthenticationCredentials : unit -&gt; Azure.AI.Projects.NoAuthenticationCredentials" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.NoAuthenticationCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.NoAuthenticationCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Credentials that do not require authentication. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.NoAuthenticationCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingUploadConfiguration">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.PendingUploadConfiguration PendingUploadConfiguration (string pendingUploadId = default, string connectionName = default, Azure.AI.Projects.PendingUploadType pendingUploadType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.PendingUploadConfiguration PendingUploadConfiguration(string pendingUploadId, string connectionName, valuetype Azure.AI.Projects.PendingUploadType pendingUploadType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.PendingUploadConfiguration(System.String,System.String,Azure.AI.Projects.PendingUploadType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PendingUploadConfiguration (Optional pendingUploadId As String = Nothing, Optional connectionName As String = Nothing, Optional pendingUploadType As PendingUploadType = Nothing) As PendingUploadConfiguration" />
      <MemberSignature Language="F#" Value="static member PendingUploadConfiguration : string * string * Azure.AI.Projects.PendingUploadType -&gt; Azure.AI.Projects.PendingUploadConfiguration" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.PendingUploadConfiguration (pendingUploadId, connectionName, pendingUploadType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.PendingUploadConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pendingUploadId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="pendingUploadType" Type="Azure.AI.Projects.PendingUploadType" />
      </Parameters>
      <Docs>
        <param name="pendingUploadId"> If PendingUploadId is not provided, a random GUID will be used. </param>
        <param name="connectionName"> Azure Storage Account connection name to use for generating temporary SAS token. </param>
        <param name="pendingUploadType"> BlobReference is the only supported type. </param>
        <summary> Represents a request for a pending upload. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.PendingUploadConfiguration" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingUploadResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.PendingUploadResult PendingUploadResult (Azure.AI.Projects.BlobReference blobReference = default, string pendingUploadId = default, string version = default, Azure.AI.Projects.PendingUploadType pendingUploadType = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.PendingUploadResult PendingUploadResult(class Azure.AI.Projects.BlobReference blobReference, string pendingUploadId, string version, valuetype Azure.AI.Projects.PendingUploadType pendingUploadType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.PendingUploadResult(Azure.AI.Projects.BlobReference,System.String,System.String,Azure.AI.Projects.PendingUploadType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PendingUploadResult (Optional blobReference As BlobReference = Nothing, Optional pendingUploadId As String = Nothing, Optional version As String = Nothing, Optional pendingUploadType As PendingUploadType = Nothing) As PendingUploadResult" />
      <MemberSignature Language="F#" Value="static member PendingUploadResult : Azure.AI.Projects.BlobReference * string * string * Azure.AI.Projects.PendingUploadType -&gt; Azure.AI.Projects.PendingUploadResult" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.PendingUploadResult (blobReference, pendingUploadId, version, pendingUploadType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.PendingUploadResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blobReference" Type="Azure.AI.Projects.BlobReference" />
        <Parameter Name="pendingUploadId" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="pendingUploadType" Type="Azure.AI.Projects.PendingUploadType" />
      </Parameters>
      <Docs>
        <param name="blobReference"> Container-level read, write, list SAS. </param>
        <param name="pendingUploadId"> ID for this upload request. </param>
        <param name="version"> Version of asset to be created if user did not specify version when initially creating upload. </param>
        <param name="pendingUploadType"> BlobReference is the only supported type. </param>
        <summary> Represents the response for a pending upload request. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.PendingUploadResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedTeam">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.RedTeam RedTeam (string name = default, string displayName = default, int? numTurns = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.AttackStrategy&gt; attackStrategies = default, bool? simulationOnly = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.RiskCategory&gt; riskCategories = default, string applicationScenario = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default, System.Collections.Generic.IDictionary&lt;string,string&gt; properties = default, string status = default, Azure.AI.Projects.TargetConfig target = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.RedTeam RedTeam(string name, string displayName, valuetype System.Nullable`1&lt;int32&gt; numTurns, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Projects.AttackStrategy&gt; attackStrategies, valuetype System.Nullable`1&lt;bool&gt; simulationOnly, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.AI.Projects.RiskCategory&gt; riskCategories, string applicationScenario, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; properties, string status, class Azure.AI.Projects.TargetConfig target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.RedTeam(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.AI.Projects.AttackStrategy},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.AI.Projects.RiskCategory},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,Azure.AI.Projects.TargetConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RedTeam (Optional name As String = Nothing, Optional displayName As String = Nothing, Optional numTurns As Nullable(Of Integer) = Nothing, Optional attackStrategies As IEnumerable(Of AttackStrategy) = Nothing, Optional simulationOnly As Nullable(Of Boolean) = Nothing, Optional riskCategories As IEnumerable(Of RiskCategory) = Nothing, Optional applicationScenario As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing, Optional properties As IDictionary(Of String, String) = Nothing, Optional status As String = Nothing, Optional target As TargetConfig = Nothing) As RedTeam" />
      <MemberSignature Language="F#" Value="static member RedTeam : string * string * Nullable&lt;int&gt; * seq&lt;Azure.AI.Projects.AttackStrategy&gt; * Nullable&lt;bool&gt; * seq&lt;Azure.AI.Projects.RiskCategory&gt; * string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Azure.AI.Projects.TargetConfig -&gt; Azure.AI.Projects.RedTeam" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.RedTeam (name, displayName, numTurns, attackStrategies, simulationOnly, riskCategories, applicationScenario, tags, properties, status, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.RedTeam</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="numTurns" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="attackStrategies" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.AttackStrategy&gt;" />
        <Parameter Name="simulationOnly" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="riskCategories" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Projects.RiskCategory&gt;" />
        <Parameter Name="applicationScenario" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="properties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="target" Type="Azure.AI.Projects.TargetConfig" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the red team run. </param>
        <param name="displayName"> Name of the red-team run. </param>
        <param name="numTurns"> Number of simulation rounds. </param>
        <param name="attackStrategies"> List of attack strategies or nested lists of attack strategies. </param>
        <param name="simulationOnly"> Simulation-only or Simulation + Evaluation. Default false, if true the scan outputs conversation not evaluation result. </param>
        <param name="riskCategories"> List of risk categories to generate attack objectives for. </param>
        <param name="applicationScenario"> Application scenario for the red team operation, to generate scenario specific attacks. </param>
        <param name="tags"> Red team's tags. Unlike properties, tags are fully mutable. </param>
        <param name="properties"> Red team's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed. </param>
        <param name="status"> Status of the red-team. It is set by service and is read-only. </param>
        <param name="target"> Target configuration for the red-team run. </param>
        <summary> Red team details. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.RedTeam" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SASCredentials">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.SASCredentials SASCredentials (string sasToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.SASCredentials SASCredentials(string sasToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.SASCredentials(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SASCredentials (Optional sasToken As String = Nothing) As SASCredentials" />
      <MemberSignature Language="F#" Value="static member SASCredentials : string -&gt; Azure.AI.Projects.SASCredentials" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.SASCredentials sasToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.SASCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sasToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sasToken"> SAS token. </param>
        <summary> Shared Access Signature (SAS) credential definition. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.SASCredentials" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchIndex">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.SearchIndex SearchIndex (string type = default, string id = default, string name = default, string version = default, string description = default, System.Collections.Generic.IDictionary&lt;string,string&gt; tags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.SearchIndex SearchIndex(string type, string id, string name, string version, string description, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.SearchIndex(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SearchIndex (Optional type As String = Nothing, Optional id As String = Nothing, Optional name As String = Nothing, Optional version As String = Nothing, Optional description As String = Nothing, Optional tags As IDictionary(Of String, String) = Nothing) As SearchIndex" />
      <MemberSignature Language="F#" Value="static member SearchIndex : string * string * string * string * string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Azure.AI.Projects.SearchIndex" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.SearchIndex (type, id, name, version, description, tags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.SearchIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="type"> Type of index. </param>
        <param name="id"> Asset ID, a unique identifier for the asset. </param>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the resource. </param>
        <param name="description"> The asset description text. </param>
        <param name="tags"> Tag dictionary. Tags can be added, removed, and updated. </param>
        <summary>
            Index resource Definition
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AzureAISearchIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.AI.Projects.FieldMapping)" />, <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.ManagedAzureAISearchIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />, and <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.CosmosDBIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,Azure.AI.Projects.EmbeddingConfiguration,Azure.AI.Projects.FieldMapping)" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.SearchIndex" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemMessage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.SystemMessage SystemMessage (string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.SystemMessage SystemMessage(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.SystemMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SystemMessage (Optional content As String = Nothing) As SystemMessage" />
      <MemberSignature Language="F#" Value="static member SystemMessage : string -&gt; Azure.AI.Projects.SystemMessage" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.SystemMessage content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.SystemMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> Plain text instructions provided by the system to steer model behavior. </param>
        <summary> A message authored by the system to guide model behavior. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.SystemMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetConfig">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.TargetConfig TargetConfig (string type = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.TargetConfig TargetConfig(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.TargetConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetConfig (Optional type As String = Nothing) As TargetConfig" />
      <MemberSignature Language="F#" Value="static member TargetConfig : string -&gt; Azure.AI.Projects.TargetConfig" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.TargetConfig type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.TargetConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"> Type of the model configuration. </param>
        <summary>
            Abstract class for target configuration.
            Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="M:Azure.AI.Projects.AzureAIProjectsModelFactory.AzureOpenAIModelConfiguration(System.String)" />.
            </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.TargetConfig" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserMessage">
      <MemberSignature Language="C#" Value="public static Azure.AI.Projects.UserMessage UserMessage (string content = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Projects.UserMessage UserMessage(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.AzureAIProjectsModelFactory.UserMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserMessage (Optional content As String = Nothing) As UserMessage" />
      <MemberSignature Language="F#" Value="static member UserMessage : string -&gt; Azure.AI.Projects.UserMessage" Usage="Azure.AI.Projects.AzureAIProjectsModelFactory.UserMessage content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Projects.UserMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> Input content or question provided by the end user. </param>
        <summary> A message authored by the end user as input to the model. </summary>
        <returns> A new <see cref="T:Azure.AI.Projects.UserMessage" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
