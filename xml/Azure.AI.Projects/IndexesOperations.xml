<Type Name="IndexesOperations" FullName="Azure.AI.Projects.IndexesOperations">
  <TypeSignature Language="C#" Value="public class IndexesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexesOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.IndexesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexesOperations" />
  <TypeSignature Language="F#" Value="type IndexesOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The IndexesOperations sub-client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IndexesOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of IndexesOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult CreateOrUpdate (string name, string version, System.ClientModel.BinaryContent content, System.ClientModel.Primitives.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult CreateOrUpdate(string name, string version, class System.ClientModel.BinaryContent content, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.CreateOrUpdate(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (name As String, version As String, content As BinaryContent, Optional options As RequestOptions = Nothing) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult&#xA;override this.CreateOrUpdate : string * string * System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult" Usage="indexesOperations.CreateOrUpdate (name, version, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="content" Type="System.ClientModel.BinaryContent" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to create or update. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Create a new or update an existing Index with the given version id
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="version" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; CreateOrUpdateAsync (string name, string version, System.ClientModel.BinaryContent content, System.ClientModel.Primitives.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; CreateOrUpdateAsync(string name, string version, class System.ClientModel.BinaryContent content, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.CreateOrUpdateAsync(System.String,System.String,System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (name As String, version As String, content As BinaryContent, Optional options As RequestOptions = Nothing) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.CreateOrUpdateAsync : string * string * System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="indexesOperations.CreateOrUpdateAsync (name, version, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="content" Type="System.ClientModel.BinaryContent" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to create or update. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Create a new or update an existing Index with the given version id
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="version" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult Delete (string name, string version, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult Delete(string name, string version, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.Delete(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (name As String, version As String, options As RequestOptions) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult&#xA;override this.Delete : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult" Usage="indexesOperations.Delete (name, version, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the Index to delete. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult Delete (string name, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult Delete(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.Delete(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (name As String, version As String, Optional cancellationToken As CancellationToken = Nothing) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&#xA;override this.Delete : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult" Usage="indexesOperations.Delete (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the Index to delete. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; DeleteAsync (string name, string version, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; DeleteAsync(string name, string version, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.DeleteAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (name As String, version As String, options As RequestOptions) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.DeleteAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="indexesOperations.DeleteAsync (name, version, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the Index to delete. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; DeleteAsync (string name, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; DeleteAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.DeleteAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (name As String, version As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.DeleteAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="indexesOperations.DeleteAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The version of the Index to delete. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult GetIndex (string name, string version, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult GetIndex(string name, string version, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndex(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndex (name As String, version As String, options As RequestOptions) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member GetIndex : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult&#xA;override this.GetIndex : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult" Usage="indexesOperations.GetIndex (name, version, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to retrieve. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt; GetIndex (string name, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.SearchIndex&gt; GetIndex(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndex(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndex (name As String, version As String, Optional cancellationToken As CancellationToken = Nothing) As ClientResult(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndex : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;&#xA;override this.GetIndex : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;" Usage="indexesOperations.GetIndex (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to retrieve. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; GetIndexAsync (string name, string version, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; GetIndexAsync(string name, string version, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexAsync (name As String, version As String, options As RequestOptions) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.GetIndexAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="indexesOperations.GetIndexAsync (name, version, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to retrieve. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;&gt; GetIndexAsync (string name, string version, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.SearchIndex&gt;&gt; GetIndexAsync(string name, string version, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexAsync (name As String, version As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientResult(Of SearchIndex))" />
      <MemberSignature Language="F#" Value="abstract member GetIndexAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;&gt;&#xA;override this.GetIndexAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;&gt;" Usage="indexesOperations.GetIndexAsync (name, version, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.SearchIndex&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="version"> The specific version id of the Index to retrieve. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> or <paramref name="version" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> or <paramref name="version" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexes">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.CollectionResult GetIndexes (System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.CollectionResult GetIndexes(class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexes(System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexes (options As RequestOptions) As CollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetIndexes : System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult&#xA;override this.GetIndexes : System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult" Usage="indexesOperations.GetIndexes options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.CollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List the latest version of each Index
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexes">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt; GetIndexes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.CollectionResult`1&lt;class Azure.AI.Projects.SearchIndex&gt; GetIndexes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexes (Optional cancellationToken As CancellationToken = Nothing) As CollectionResult(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexes : System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;&#xA;override this.GetIndexes : System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;" Usage="indexesOperations.GetIndexes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List the latest version of each Index. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexesAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.AsyncCollectionResult GetIndexesAsync (System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.AsyncCollectionResult GetIndexesAsync(class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexesAsync(System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexesAsync (options As RequestOptions) As AsyncCollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetIndexesAsync : System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult&#xA;override this.GetIndexesAsync : System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult" Usage="indexesOperations.GetIndexesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.AsyncCollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List the latest version of each Index
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexesAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt; GetIndexesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.AsyncCollectionResult`1&lt;class Azure.AI.Projects.SearchIndex&gt; GetIndexesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncCollectionResult(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexesAsync : System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;&#xA;override this.GetIndexesAsync : System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;" Usage="indexesOperations.GetIndexesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List the latest version of each Index. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexVersions">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.CollectionResult GetIndexVersions (string name, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.CollectionResult GetIndexVersions(string name, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexVersions(System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexVersions (name As String, options As RequestOptions) As CollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetIndexVersions : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult&#xA;override this.GetIndexVersions : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult" Usage="indexesOperations.GetIndexVersions (name, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.CollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List all versions of the given Index
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexVersions">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt; GetIndexVersions (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.CollectionResult`1&lt;class Azure.AI.Projects.SearchIndex&gt; GetIndexVersions(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexVersions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexVersions (name As String, Optional cancellationToken As CancellationToken = Nothing) As CollectionResult(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexVersions : string * System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;&#xA;override this.GetIndexVersions : string * System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;" Usage="indexesOperations.GetIndexVersions (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.CollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List all versions of the given Index. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.AsyncCollectionResult GetIndexVersionsAsync (string name, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.AsyncCollectionResult GetIndexVersionsAsync(string name, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexVersionsAsync(System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexVersionsAsync (name As String, options As RequestOptions) As AsyncCollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetIndexVersionsAsync : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult&#xA;override this.GetIndexVersionsAsync : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult" Usage="indexesOperations.GetIndexVersionsAsync (name, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.AsyncCollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List all versions of the given Index
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIndexVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt; GetIndexVersionsAsync (string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.AsyncCollectionResult`1&lt;class Azure.AI.Projects.SearchIndex&gt; GetIndexVersionsAsync(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.IndexesOperations.GetIndexVersionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIndexVersionsAsync (name As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncCollectionResult(Of SearchIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexVersionsAsync : string * System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;&#xA;override this.GetIndexVersionsAsync : string * System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;" Usage="indexesOperations.GetIndexVersionsAsync (name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.SearchIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List all versions of the given Index. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public System.ClientModel.Primitives.ClientPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ClientModel.Primitives.ClientPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.IndexesOperations.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pipeline As ClientPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : System.ClientModel.Primitives.ClientPipeline" Usage="Azure.AI.Projects.IndexesOperations.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ClientPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
