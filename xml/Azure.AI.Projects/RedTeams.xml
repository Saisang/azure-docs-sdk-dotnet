<Type Name="RedTeams" FullName="Azure.AI.Projects.RedTeams">
  <TypeSignature Language="C#" Value="public class RedTeams" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RedTeams extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Projects.RedTeams" />
  <TypeSignature Language="VB.NET" Value="Public Class RedTeams" />
  <TypeSignature Language="F#" Value="type RedTeams = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Projects</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The RedTeams sub-client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RedTeams ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RedTeams for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt; Create (Azure.AI.Projects.RedTeam redTeam, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.RedTeam&gt; Create(class Azure.AI.Projects.RedTeam redTeam, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.Create(Azure.AI.Projects.RedTeam,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (redTeam As RedTeam, Optional cancellationToken As CancellationToken = Nothing) As ClientResult(Of RedTeam)" />
      <MemberSignature Language="F#" Value="abstract member Create : Azure.AI.Projects.RedTeam * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&#xA;override this.Create : Azure.AI.Projects.RedTeam * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;" Usage="redTeams.Create (redTeam, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redTeam" Type="Azure.AI.Projects.RedTeam" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="redTeam"> Redteam to be run. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Creates a redteam run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
    ApplicationScenario = "qaxxxhjp",
    Tags =
    {
        ["key1287"] = "gbklekkgmxkfbhehgh"
    },
    Properties =
    {
        ["key9280"] = "fwzjtipl"
    },
};
Response<RedTeam> response = client.Create(redTeam);
]]></code>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
};
Response<RedTeam> response = client.Create(redTeam);
]]></code></example>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="redTeam" /> is null. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult Create (System.ClientModel.BinaryContent content, System.ClientModel.Primitives.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult Create(class System.ClientModel.BinaryContent content, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.Create(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (content As BinaryContent, Optional options As RequestOptions = Nothing) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member Create : System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult&#xA;override this.Create : System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult" Usage="redTeams.Create (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.ClientModel.BinaryContent" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Creates a redteam run.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt; CreateAsync (Azure.AI.Projects.RedTeam redTeam, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.RedTeam&gt;&gt; CreateAsync(class Azure.AI.Projects.RedTeam redTeam, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.CreateAsync(Azure.AI.Projects.RedTeam,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (redTeam As RedTeam, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientResult(Of RedTeam))" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Azure.AI.Projects.RedTeam * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;&#xA;override this.CreateAsync : Azure.AI.Projects.RedTeam * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;" Usage="redTeams.CreateAsync (redTeam, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redTeam" Type="Azure.AI.Projects.RedTeam" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="redTeam"> Redteam to be run. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Creates a redteam run. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
    ApplicationScenario = "qaxxxhjp",
    Tags =
    {
        ["key1287"] = "gbklekkgmxkfbhehgh"
    },
    Properties =
    {
        ["key9280"] = "fwzjtipl"
    },
};
Response<RedTeam> response = await client.CreateAsync(redTeam);
]]></code>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
TokenCredential credential = new DefaultAzureCredential();
RedTeams client = new AIProjectClient(endpoint, credential).GetRedTeamsClient(apiVersion: "2025-05-15-preview");

RedTeam redTeam = new RedTeam(null)
{
    NumTurns = 10,
    AttackStrategies = { AttackStrategy.Easy },
    SimulationOnly = true,
    RiskCategories = { RiskCategory.HateUnfairness },
};
Response<RedTeam> response = await client.CreateAsync(redTeam);
]]></code></example>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="redTeam" /> is null. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; CreateAsync (System.ClientModel.BinaryContent content, System.ClientModel.Primitives.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; CreateAsync(class System.ClientModel.BinaryContent content, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.CreateAsync(System.ClientModel.BinaryContent,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (content As BinaryContent, Optional options As RequestOptions = Nothing) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.CreateAsync : System.ClientModel.BinaryContent * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="redTeams.CreateAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.ClientModel.BinaryContent" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Creates a redteam run.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult Get (string name, string clientRequestId, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult Get(string name, string clientRequestId, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.Get(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String, clientRequestId As String, options As RequestOptions) As ClientResult" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult&#xA;override this.Get : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.ClientResult" Usage="redTeams.Get (name, clientRequestId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the red team run. </param>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get a redteam by name.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt; Get (string name, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.RedTeam&gt; Get(string name, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As ClientResult(Of RedTeam)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;" Usage="redTeams.Get (name, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the red team run. </param>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Get a redteam by name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.CollectionResult GetAll (string clientRequestId, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.CollectionResult GetAll(string clientRequestId, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAll(System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (clientRequestId As String, options As RequestOptions) As CollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult&#xA;override this.GetAll : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.CollectionResult" Usage="redTeams.GetAll (clientRequestId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.CollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List a redteam by name.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAll">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.CollectionResult&lt;Azure.AI.Projects.RedTeam&gt; GetAll (string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.CollectionResult`1&lt;class Azure.AI.Projects.RedTeam&gt; GetAll(string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAll(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAll (Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As CollectionResult(Of RedTeam)" />
      <MemberSignature Language="F#" Value="abstract member GetAll : string * System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.RedTeam&gt;&#xA;override this.GetAll : string * System.Threading.CancellationToken -&gt; System.ClientModel.CollectionResult&lt;Azure.AI.Projects.RedTeam&gt;" Usage="redTeams.GetAll (clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.CollectionResult&lt;Azure.AI.Projects.RedTeam&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List a redteam by name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.Primitives.AsyncCollectionResult GetAllAsync (string clientRequestId, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.Primitives.AsyncCollectionResult GetAllAsync(string clientRequestId, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAllAsync(System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (clientRequestId As String, options As RequestOptions) As AsyncCollectionResult" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult&#xA;override this.GetAllAsync : string * System.ClientModel.Primitives.RequestOptions -&gt; System.ClientModel.Primitives.AsyncCollectionResult" Usage="redTeams.GetAllAsync (clientRequestId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.AsyncCollectionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] List a redteam by name.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.RedTeam&gt; GetAllAsync (string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ClientModel.AsyncCollectionResult`1&lt;class Azure.AI.Projects.RedTeam&gt; GetAllAsync(string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAllAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllAsync (Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncCollectionResult(Of RedTeam)" />
      <MemberSignature Language="F#" Value="abstract member GetAllAsync : string * System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.RedTeam&gt;&#xA;override this.GetAllAsync : string * System.Threading.CancellationToken -&gt; System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.RedTeam&gt;" Usage="redTeams.GetAllAsync (clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.AsyncCollectionResult&lt;Azure.AI.Projects.RedTeam&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> List a redteam by name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt; GetAsync (string name, string clientRequestId, System.ClientModel.Primitives.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult&gt; GetAsync(string name, string clientRequestId, class System.ClientModel.Primitives.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAsync(System.String,System.String,System.ClientModel.Primitives.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (name As String, clientRequestId As String, options As RequestOptions) As Task(Of ClientResult)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;&#xA;override this.GetAsync : string * string * System.ClientModel.Primitives.RequestOptions -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;" Usage="redTeams.GetAsync (name, clientRequestId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the red team run. </param>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            [Protocol Method] Get a redteam by name.
            <list type="bullet"><item><description> This <see href="https://aka.ms/azsdk/net/protocol-methods">protocol method</see> allows explicit creation of the request and processing of the response for advanced scenarios. </description></item></list></summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt; GetAsync (string name, string clientRequestId = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.ClientResult`1&lt;class Azure.AI.Projects.RedTeam&gt;&gt; GetAsync(string name, string clientRequestId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Projects.RedTeams.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (name As String, Optional clientRequestId As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ClientResult(Of RedTeam))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;" Usage="redTeams.GetAsync (name, clientRequestId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.ClientResult&lt;Azure.AI.Projects.RedTeam&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clientRequestId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name"> Identifier of the red team run. </param>
        <param name="clientRequestId"> An opaque, globally-unique, client-generated string identifier for the request. </param>
        <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        <summary> Get a redteam by name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ClientModel.ClientResultException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public System.ClientModel.Primitives.ClientPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ClientModel.Primitives.ClientPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Projects.RedTeams.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pipeline As ClientPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : System.ClientModel.Primitives.ClientPipeline" Usage="Azure.AI.Projects.RedTeams.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Projects</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.ClientPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
