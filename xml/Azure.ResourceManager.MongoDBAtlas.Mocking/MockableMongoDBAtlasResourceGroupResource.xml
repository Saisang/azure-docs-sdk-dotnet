<Type Name="MockableMongoDBAtlasResourceGroupResource" FullName="Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableMongoDBAtlasResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableMongoDBAtlasResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableMongoDBAtlasResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableMongoDBAtlasResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MongoDBAtlas</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableMongoDBAtlasResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoDBAtlas</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBAtlasOrganization">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt; GetMongoDBAtlasOrganization (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt; GetMongoDBAtlasOrganization(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganization(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBAtlasOrganization (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MongoDBAtlasOrganizationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBAtlasOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&#xA;override this.GetMongoDBAtlasOrganization : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;" Usage="mockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganization (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoDBAtlas</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Name of the Organization resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/MongoDB.Atlas/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBAtlasOrganizationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&gt; GetMongoDBAtlasOrganizationAsync (string organizationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&gt; GetMongoDBAtlasOrganizationAsync(string organizationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganizationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBAtlasOrganizationAsync (organizationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MongoDBAtlasOrganizationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBAtlasOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&gt;&#xA;override this.GetMongoDBAtlasOrganizationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&gt;" Usage="mockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganizationAsync (organizationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoDBAtlas</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="organizationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="organizationName"> Name of the Organization resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a OrganizationResource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/MongoDB.Atlas/organizations/{organizationName}</description></item><item><term>Operation Id</term><description>OrganizationResource_Get</description></item><item><term>Default Api Version</term><description>2025-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="organizationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="organizationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMongoDBAtlasOrganizations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationCollection GetMongoDBAtlasOrganizations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationCollection GetMongoDBAtlasOrganizations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MongoDBAtlas.Mocking.MockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganizations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMongoDBAtlasOrganizations () As MongoDBAtlasOrganizationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetMongoDBAtlasOrganizations : unit -&gt; Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationCollection&#xA;override this.GetMongoDBAtlasOrganizations : unit -&gt; Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationCollection" Usage="mockableMongoDBAtlasResourceGroupResource.GetMongoDBAtlasOrganizations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MongoDBAtlas</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.MongoDBAtlas.MongoDBAtlasOrganizationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of MongoDBAtlasOrganizationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of MongoDBAtlasOrganizationResources and their operations over a MongoDBAtlasOrganizationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
