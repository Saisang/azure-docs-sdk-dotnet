<Type Name="MockableOracleDatabaseResourceGroupResource" FullName="Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableOracleDatabaseResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableOracleDatabaseResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableOracleDatabaseResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableOracleDatabaseResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.1.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableOracleDatabaseResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabase">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt; GetAutonomousDatabase (string autonomousdatabasename, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt; GetAutonomousDatabase(string autonomousdatabasename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetAutonomousDatabase(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabase (autonomousdatabasename As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutonomousDatabaseResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&#xA;override this.GetAutonomousDatabase : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetAutonomousDatabase (autonomousdatabasename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autonomousdatabasename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="autonomousdatabasename"> The database name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a AutonomousDatabase
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}</description></item><item><term>Operation Id</term><description>AutonomousDatabase_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="autonomousdatabasename" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autonomousdatabasename" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabaseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&gt; GetAutonomousDatabaseAsync (string autonomousdatabasename, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&gt; GetAutonomousDatabaseAsync(string autonomousdatabasename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetAutonomousDatabaseAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabaseAsync (autonomousdatabasename As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutonomousDatabaseResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&gt;&#xA;override this.GetAutonomousDatabaseAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetAutonomousDatabaseAsync (autonomousdatabasename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autonomousdatabasename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="autonomousdatabasename"> The database name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a AutonomousDatabase
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}</description></item><item><term>Operation Id</term><description>AutonomousDatabase_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.AutonomousDatabaseResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="autonomousdatabasename" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="autonomousdatabasename" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutonomousDatabases">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCollection GetAutonomousDatabases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCollection GetAutonomousDatabases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetAutonomousDatabases" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutonomousDatabases () As AutonomousDatabaseCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutonomousDatabases : unit -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCollection&#xA;override this.GetAutonomousDatabases : unit -&gt; Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCollection" Usage="mockableOracleDatabaseResourceGroupResource.GetAutonomousDatabases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.AutonomousDatabaseCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutonomousDatabaseResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AutonomousDatabaseResources and their operations over a AutonomousDatabaseResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudExadataInfrastructure">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt; GetCloudExadataInfrastructure (string cloudexadatainfrastructurename, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt; GetCloudExadataInfrastructure(string cloudexadatainfrastructurename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructure(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudExadataInfrastructure (cloudexadatainfrastructurename As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudExadataInfrastructureResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudExadataInfrastructure : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&#xA;override this.GetCloudExadataInfrastructure : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructure (cloudexadatainfrastructurename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudexadatainfrastructurename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudexadatainfrastructurename"> CloudExadataInfrastructure name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudExadataInfrastructure
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}</description></item><item><term>Operation Id</term><description>CloudExadataInfrastructure_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudexadatainfrastructurename" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudexadatainfrastructurename" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudExadataInfrastructureAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&gt; GetCloudExadataInfrastructureAsync (string cloudexadatainfrastructurename, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&gt; GetCloudExadataInfrastructureAsync(string cloudexadatainfrastructurename, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructureAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudExadataInfrastructureAsync (cloudexadatainfrastructurename As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudExadataInfrastructureResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudExadataInfrastructureAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&gt;&#xA;override this.GetCloudExadataInfrastructureAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructureAsync (cloudexadatainfrastructurename, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudexadatainfrastructurename" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudexadatainfrastructurename"> CloudExadataInfrastructure name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudExadataInfrastructure
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}</description></item><item><term>Operation Id</term><description>CloudExadataInfrastructure_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudexadatainfrastructurename" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudexadatainfrastructurename" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudExadataInfrastructures">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureCollection GetCloudExadataInfrastructures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureCollection GetCloudExadataInfrastructures() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructures" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudExadataInfrastructures () As CloudExadataInfrastructureCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudExadataInfrastructures : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureCollection&#xA;override this.GetCloudExadataInfrastructures : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureCollection" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudExadataInfrastructures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudExadataInfrastructureCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CloudExadataInfrastructureResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CloudExadataInfrastructureResources and their operations over a CloudExadataInfrastructureResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; GetCloudVmCluster (string cloudvmclustername, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt; GetCloudVmCluster(string cloudvmclustername, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudVmCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmCluster (cloudvmclustername As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&#xA;override this.GetCloudVmCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudVmCluster (cloudvmclustername, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudvmclustername" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudvmclustername"> CloudVmCluster name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmCluster_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudvmclustername" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudvmclustername" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; GetCloudVmClusterAsync (string cloudvmclustername, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt; GetCloudVmClusterAsync(string cloudvmclustername, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudVmClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusterAsync (cloudvmclustername As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;&#xA;override this.GetCloudVmClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudVmClusterAsync (cloudvmclustername, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.CloudVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cloudvmclustername" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cloudvmclustername"> CloudVmCluster name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a CloudVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}</description></item><item><term>Operation Id</term><description>CloudVmCluster_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.CloudVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cloudvmclustername" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cloudvmclustername" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudVmClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.CloudVmClusterCollection GetCloudVmClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.CloudVmClusterCollection GetCloudVmClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetCloudVmClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudVmClusters () As CloudVmClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudVmClusters : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterCollection&#xA;override this.GetCloudVmClusters : unit -&gt; Azure.ResourceManager.OracleDatabase.CloudVmClusterCollection" Usage="mockableOracleDatabaseResourceGroupResource.GetCloudVmClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.CloudVmClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CloudVmClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CloudVmClusterResources and their operations over a CloudVmClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExadbVmCluster">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt; GetExadbVmCluster (string exadbVmClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt; GetExadbVmCluster(string exadbVmClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExadbVmCluster(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExadbVmCluster (exadbVmClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExadbVmClusterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExadbVmCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&#xA;override this.GetExadbVmCluster : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetExadbVmCluster (exadbVmClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exadbVmClusterName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="exadbVmClusterName"> The name of the ExadbVmCluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ExadbVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/exadbVmClusters/{exadbVmClusterName}</description></item><item><term>Operation Id</term><description>ExadbVmCluster_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exadbVmClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exadbVmClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExadbVmClusterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&gt; GetExadbVmClusterAsync (string exadbVmClusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&gt; GetExadbVmClusterAsync(string exadbVmClusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExadbVmClusterAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExadbVmClusterAsync (exadbVmClusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExadbVmClusterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExadbVmClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&gt;&#xA;override this.GetExadbVmClusterAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetExadbVmClusterAsync (exadbVmClusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exadbVmClusterName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="exadbVmClusterName"> The name of the ExadbVmCluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ExadbVmCluster
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/exadbVmClusters/{exadbVmClusterName}</description></item><item><term>Operation Id</term><description>ExadbVmCluster_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.ExadbVmClusterResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exadbVmClusterName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exadbVmClusterName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExadbVmClusters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.ExadbVmClusterCollection GetExadbVmClusters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.ExadbVmClusterCollection GetExadbVmClusters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExadbVmClusters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExadbVmClusters () As ExadbVmClusterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExadbVmClusters : unit -&gt; Azure.ResourceManager.OracleDatabase.ExadbVmClusterCollection&#xA;override this.GetExadbVmClusters : unit -&gt; Azure.ResourceManager.OracleDatabase.ExadbVmClusterCollection" Usage="mockableOracleDatabaseResourceGroupResource.GetExadbVmClusters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.ExadbVmClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExadbVmClusterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExadbVmClusterResources and their operations over a ExadbVmClusterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExascaleDBStorageVault">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt; GetExascaleDBStorageVault (string exascaleDbStorageVaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt; GetExascaleDBStorageVault(string exascaleDbStorageVaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVault(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExascaleDBStorageVault (exascaleDbStorageVaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExascaleDBStorageVaultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExascaleDBStorageVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&#xA;override this.GetExascaleDBStorageVault : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVault (exascaleDbStorageVaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exascaleDbStorageVaultName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="exascaleDbStorageVaultName"> The name of the ExascaleDbStorageVault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ExascaleDbStorageVault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/exascaleDbStorageVaults/{exascaleDbStorageVaultName}</description></item><item><term>Operation Id</term><description>ExascaleDbStorageVault_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exascaleDbStorageVaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exascaleDbStorageVaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExascaleDBStorageVaultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&gt; GetExascaleDBStorageVaultAsync (string exascaleDbStorageVaultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&gt; GetExascaleDBStorageVaultAsync(string exascaleDbStorageVaultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVaultAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExascaleDBStorageVaultAsync (exascaleDbStorageVaultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExascaleDBStorageVaultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExascaleDBStorageVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&gt;&#xA;override this.GetExascaleDBStorageVaultAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&gt;" Usage="mockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVaultAsync (exascaleDbStorageVaultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exascaleDbStorageVaultName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="exascaleDbStorageVaultName"> The name of the ExascaleDbStorageVault. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a ExascaleDbStorageVault
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/exascaleDbStorageVaults/{exascaleDbStorageVaultName}</description></item><item><term>Operation Id</term><description>ExascaleDbStorageVault_Get</description></item><item><term>Default Api Version</term><description>2025-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exascaleDbStorageVaultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="exascaleDbStorageVaultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExascaleDBStorageVaults">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultCollection GetExascaleDBStorageVaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultCollection GetExascaleDBStorageVaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.OracleDatabase.Mocking.MockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExascaleDBStorageVaults () As ExascaleDBStorageVaultCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExascaleDBStorageVaults : unit -&gt; Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultCollection&#xA;override this.GetExascaleDBStorageVaults : unit -&gt; Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultCollection" Usage="mockableOracleDatabaseResourceGroupResource.GetExascaleDBStorageVaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.OracleDatabase</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.OracleDatabase.ExascaleDBStorageVaultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExascaleDBStorageVaultResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExascaleDBStorageVaultResources and their operations over a ExascaleDBStorageVaultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
